%!PS-Adobe-3.0%%Title: (SWM.manual.fm)%%Creator: (FrameMaker 7.0: LaserWriter 8 8.7.1)%%CreationDate: (4:49 PM Tuesday, April 13, 2004)%%For: ()%%Pages: 6%%DocumentFonts: TimesNewRomanPS-BoldMT TimesNewRomanPSMT TimesNewRomanPS-ItalicMT Symbol%%DocumentNeededFonts: TimesNewRomanPS-BoldMT TimesNewRomanPSMT TimesNewRomanPS-ItalicMT Symbol%%DocumentSuppliedFonts: %%DocumentData: Clean7Bit%%PageOrder: Ascend%%Orientation: Portrait%%DocumentMedia: (Default) 612 792 0 () ()%RBINumCopies: 1%RBINupNess: 1 1%RBIPCFileName: (LEXT522.PPD)%RBIPPDFileVersion: (3.1.6)%ADO_ImageableArea: 30 33 582 761%RBIDocumentSuppliedFonts: %%EndComments%%BeginDefaults%%ViewingOrientation: 1 0 0 1%%EndDefaultsuserdict/dscInfo 5 dict dup begin/Title(SWM.manual.fm)def/Creator(FrameMaker 7.0: LaserWriter 8 8.7.1)def/CreationDate(4:49 PM Tuesday, April 13, 2004)def/For()def/Pages 6 defend put%%BeginProlog%%BeginFeature: *JobPatchFile 1%%Lexmark Macintosh PPD File 1%%EndFeature/md 209 dict def md begin/currentpacking where {pop /sc_oldpacking currentpacking def true setpacking}if%%BeginFile: lw8_feature-1.01%%Copyright: Copyright 1990-1999 Adobe Systems Incorporated and Apple Computer Incorporated. All Rights Reserved./bd{bind def}bind def/ld{load def}bd/xs{exch store}bd/Z{0 def}bd/T true def/F false def/level2/languagelevel where{pop languagelevel 2 ge}{F}ifelsedef/odictstk Z/oopstk Z/fcl{count oopstk sub dup 0 gt{{pop}repeat}{pop}ifelsecountdictstack odictstk sub dup 0 gt{{end}repeat}{pop}ifelse}bd/sfcl2{/odictstk countdictstack storecount/oopstk xs}bd/efcl2{stopped{$error/newerror F put}iffcl}bd/noload Z/startnoload{{/noload save store}if}bd/endnoload{{noload restore}if}bd/setcopies{level2{1 dict begin/NumCopies exch def currentdict end setpagedevice}{userdict/#copies 3 -1 roll put}ifelse}deflevel2 startnoload/ststpgdev{}def/dopgdev{}def/stpgdev{}def/buf Z/didstop T def/sfcl{/didstop T store/odictstk countdictstack storecount/oopstk xscurrentfile cvx stopped{$error/newerror F putdidstop{save/didstop xs/buf vmstatus exch sub exch pop dup 0 lt{pop 0}ifdup 64000 gt{pop 64000}if string store{currentfile buf readline{(}efcl)eq{exit}if}{/UnexpectedEOF errordict/rangecheck get exec}ifelse}loopdidstop restore}if}iffcl}bd/efcl{/didstop F storeexecstop}bdlevel2 endnoload level2 not startnoload/setpagedevice where{pop/realstpgdev/setpagedevice ld}if/SC_topddict Z/SC_spdict Z/$spusrdict F def/dopgdev{userdict/setpagedevice undef$spusrdict{userdict/setpagedevice/realstpgdev load put/$spusrdict F store}ifSC_topddict realstpgdev}bd/stpgdev{SC_topddict dup 3 -1 roll{SC_spdict 2 index known{SC_spdict 2 index getdup 3 -1 roll{put dup}forallpop put dup}{put dup}ifelse}forallpop pop}bd/ststpgdev{/setpagedevice where{userdict eq{/$spusrdict T store}if}ifuserdict/setpagedevice/stpgdev load put/SC_topddict 0 dict store/SC_spdict 3 dict begin/InputAttributes 0 dict def/Policies 0 dict def/OutputAttributes 0 dict defcurrentdictendstore}def/sfcl/sfcl2 ld/efcl/efcl2 ldlevel2 not endnoload%%EndFile%%BeginFile: lw8_basic-4.0/xdf{exch def}bd/:L/lineto/lw/setlinewidth/:M/moveto/rl/rlineto/rm/rmoveto/:C/curveto/:T/translate/:K/closepath/:mf/makefont/gS/gsave/gR/grestore/np/newpath12{ld}repeat/framewidth -1 def/QDframwid -1 def/numframes Z/mTS matrix def/$m matrix def/av 87 def/por T def/normland F def/psb-nosave{}def/pse-nosave{}def/us Z/psb{/us save store}bd/pse{us restore}bd/level3/languagelevel where{pop languagelevel 3 ge}{F}ifelsedeflevel2 startnoload/setjob{statusdict/jobname 3 -1 roll put}bd/devg/DeviceGray def/devr/DeviceRGB def/devc/DeviceCMYK deflevel2 endnoload level2 not startnoload/setjob{1 dict begin/JobName xdf currentdict end setuserparams}bd/devg[/DeviceGray]def/devr[/DeviceRGB]def/devc[/DeviceCMYK]deflevel2 not endnoload/pm Z/mT Z/sD Z/mTSsetup{mT $m currentmatrix mTS concatmatrix pop}bd/pmSVsetup{/pm save store}bd/initializepage{mT concat}bd/endp{pm restore}bd/adjRect{dup 2 mul 6 2 roll4 index sub exch 5 -1 roll sub exch4 2 roll4 index add exch 5 -1 roll add exch4 2 roll}bd/frame1up{gSmTS setmatrixQDframwid lw/setstrokeadjust where{pop T setstrokeadjust}ifclippath pathbbox2 index sub exch3 index sub exchcurrentlinewidth framewidth muladjRectnumframes dup 0 lt{pop 0}if{4 copyrScurrentlinewidth framewidthmul 4 muladjRect}repeatpop pop pop popgR}bd/$c devr def/rectclip where{pop/rC/rectclip ld}{/rC{np 4 2 roll:M1 index 0 rl0 exch rlneg 0 rl:Kclip np}bd}ifelse/rectfill where{pop/rF/rectfill ld}{/rF{gSnp4 2 roll:M1 index 0 rl0 exch rlneg 0 rlfillgR}bd}ifelse/rectstroke where{pop/rS/rectstroke ld}{/rS{gSnp4 2 roll:M1 index 0 rl0 exch rlneg 0 rl:KstrokegR}bd}ifelse%%EndFilelevel3 startnoload%%BeginFile: lw8_safeclipL12-1.0/rectclip where{pop/rCa/rectclip ld}{/rCa{np 01 index length 4 idiv{2 copy4 getintervalaload pop4 2 roll:M1 index 0 rl0 exch rlneg 0 rl:K4 add}repeatclip nppop pop}bd}ifelse/savedstack Z/subsavedstack Z/execstring Z/saferCa{/execstring xs/odictstk countdictstack store/oopstk 0 storecount 0 ne{savedstack 0 eq{count 100 gt{count}{100}ifelsearray/savedstack xs}{count savedstack length gt{count array/savedstack xs}if}ifelsecount savedstack 0 3 -1 rollgetintervalastore/subsavedstack xs}{/subsavedstack 0 store}ifelseexecstring cvx stopped{$error/newerror F putnewpath}iffclsubsavedstack 0 ne{subsavedstack aload pop}if}bd%%EndFilelevel3 endnoload level3 not startnoload%%BeginFile: lw8_safeclipL3-1.0/saferCa/pop ld%%EndFilelevel3 not endnoload%%BeginFile: lw8_level1_colorspace-2.0/G/setgray ld/:F1/setgray ld/:F/setrgbcolor ld/:F4/setcmykcolor where{pop/setcmykcolor ld}{{3{dup3 -1 roll adddup 1 gt{pop 1}if1 exch sub4 1 roll}repeatpopsetrgbcolor}bd}ifelse/:Fx{counttomark{0{G}0{:F}{:F4}}exch getexecpop}bd/$cs Z/:rg{devr :ss}bd/:sc{$cs :ss}bd/:dc{dup type/arraytype eq{0 get}ifdup/DeviceCMYK eq{pop devc}{/DeviceGray eq{devg}{devr}ifelse}ifelse/$cs xdf}bd/:sgl{}def/:dr{}bd/:fCRD{pop}bd/:ckcs{}bd/:ss{/$c xdf}bd%%EndFile%%BeginFile: lw8_bubn-2.1/$t Z/$p Z/$s Z/$o 1. def/2state? F def/ps Zlevel2 startnoload/pushcolor/currentrgbcolor ld/popcolor/setrgbcolor ld/setcmykcolor where{pop/currentcmykcolor where{pop/pushcolor/currentcmykcolor ld/popcolor/setcmykcolor ld}if}iflevel2 endnoload level2 not startnoload/pushcolor{currentcolorspace $c eq{currentcolor currentcolorspace T}{currentcmykcolor F}ifelse}bd/popcolor{{setcolorspace setcolor}{setcmykcolor}ifelse}bdlevel2 not endnoload/pushstatic{2state?$o$t$p$s$csps}bd/popstatic{/ps xs/$cs xs/$s xs/$p xs/$t xs/$o xs/2state? xs}bd/pushgstate{currentpointpushcolorcurrentlinewidthcurrentlinecapcurrentlinejoincurrentdash exch aload lengthnp clippath pathbbox$m currentmatrix aload pop}bd/popgstate{$m astore setmatrix2 index sub exch3 index sub exchrCarray astore exch setdashsetlinejoinsetlinecaplwpopcolornp :M}bd/bu{errordict/nocurrentpoint{pop 0 0}put2state?{pushgstategR}ifpushgstategRpushgstatepushstaticpm restoremTS setmatrix}bd/bn{/pm save storepopstaticpopgstategSpopgstate2state?{gSpopgstate}if}bd/cpat{pop 64 div setgray 8{pop}repeat}bd%%EndFile%%BeginFile: lw8_basic_text-3.0/S/show ld/A{0.0 exch ashow}bd/R{0.0 exch 32 exch widthshow}bd/W{0.0 3 1 roll widthshow}bd/J{0.0 32 4 2 roll 0.0 exch awidthshow}bd/V{0.0 4 1 roll 0.0 exch awidthshow}bd/fcflg T def/fc{fcflg{vmstatus exch sub 50000 lt{(%%[ Warning: Running out of memory ]%%\r)print flush/fcflg F store}if pop}if}bd/$f[1 0 0 -1 0 0]def/:ff{$f :mf}bd/$o 1. def/gl{$o G}bd/MacEncoding StandardEncoding 256 array copy defMacEncoding dup 9/space put dup 39/quotesingle put 96/grave put/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls/registered/copyright/trademark/acute/dieresis/notequal/AE/Oslash/infinity/plusminus/lessequal/greaterequal/yen/mu/partialdiff/summation/product/pi/integral/ordfeminine/ordmasculine/Omega/ae/oslash/questiondown/exclamdown/logicalnot/radical/florin/approxequal/Delta/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/lozenge/ydieresis/Ydieresis/fraction/Euro/guilsinglleft/guilsinglright/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave/Oacute/Ocircumflex/apple/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caronMacEncoding 128 128 getinterval astore poplevel2 startnoload/copyfontdict{findfont dup length dictbegin{1 index/FID ne{def}{pop pop}ifelse}forall}bd/$ckeyd md def/:skey{1 index maxlength 2 indexlength subge{begin/$mkeys 20 dict def/$mkeys loadenddup/$ckeyd xs}if3 1 roll put}bd/fD1pass{40$ckeyd//mdne{pop 1}if$ckeyd exch:skey}bd/:searchdict Z/:searchdict{exch 2 copyknown{get}{exch/$mkeysget:searchdict}ifelse}bd/lU{//md exch 2 copyknown{get}{exch/$mkeys get:searchdict}ifelse}bd/:xs{exch 0 1 2 index length 1 sub{3 copygS 1 getinterval show gRexchget 0.0rm}for pop pop}bd/:ys{exch 0 1 2 index length 1 sub{3 copygS 1 getinterval show gRexchget 0.0 exchrm}for pop pop}bd/:xys{exch 0 1 2 index length 1 sub{3 copygS 1 getinterval show gRexch 2 mul 2 copy1 add get 3 -2 roll get exchrm}for pop pop}bdlevel2 endnoload level2 not startnoload/copyfontdict{findfont dup length dictcopybegin}bd/fD1pass/def ld/lU/load ldlevel2{/:xs/xshow ld/:ys/yshow ld/:xys/xyshow ld}iflevel2 not endnoload/:xbl{currentpoint2 index exec:M.03 ps mul currentpoint2 index 0.0rm3 indexexec:M currentpoint2 index duprm3 index exec:M0.0 1 indexrm exchexecneg 0.0 exchrm}bd/:xot{currentpoint -2.0 0.0 rm 2 index exec :Mcurrentpoint 0.0 -2.0 rm 2 index exec :Mcurrentpoint 0.0 2.0 rm 2 index exec :Mcurrentpoint 2.0 0.0 rm 2 index exec :MgS gl exec currentpoint gR :M}bd/:xsh{2 ps 0.05 mul add2 copycurrentpoint5 2 roll0.0 rmexeccurrentpoint6 2 rollsub moveto:xotmoveto}bd/fD Z/sf Z/scf Z/sf1pass{lU setfont}bd/scf1pass{exch lU exch scalefont fD}bd/scf2pass{scalefont fD}bdmd/fontname known not{/fontname/customfont def}if/Encoding Z/:mre{copyfontdict/Encoding MacEncoding deffontname currentdictenddefinefont :ff fD}bd/:bsr{copyfontdict/Encoding Encoding 256 array copy defEncoding dup}bd/pd{put dup}bd/:esr{pop popfontname currentdictenddefinefont :ff fD}bd/ps Z/fz{/ps xs}bd/cF/currentfont ld/mbf{/makeblendedfont where{popmakeblendedfont/ABlend exch definefont}{pop}ifelsefD}def%%EndFile/currentpacking where {pop sc_oldpacking setpacking}if end%%EndProlog%%BeginSetupmd begin/fD/def ld/sf/setfont ld /scf/scf2pass ld%RBIIncludeNonPPDFeature: NumCopies 1%RBIBeginNonPPDFeature: WaitTimeout 600 600/languagelevel where{pop languagelevel 2 ge}{false}ifelse{1 dict dup/WaitTimeout 4 -1 roll put setuserparams}{statusdict/waittimeout 3 -1 roll put}ifelse%RBIEndNonPPDFeaturesfcl{%%BeginFeature: *FormSubstitution PromptForm<< /Policies << /PageSize 2 >> >> setpagedevice%%EndFeature
}efcl
sfcl{%%BeginFeature: *Duplex None1 dict dup /Duplex false put setpagedevice%%EndFeature
}efcl
sfcl{%%BeginFeature: *Resolution 1200ImageQ
	1 dict dup /HWResolution [600 600] put setpagedevice
	<< /DeviceRenderingInfo << /Type 98 /Screening /IET >> >> setpagedevice%%EndFeature
}efcl
sfcl{%%BeginFeature: *PictureGrade FalseM<< /DeviceRenderingInfo << /Type 98 /Screening /None >> >> setpagedevice%%EndFeature
}efcl
sfcl{%%BeginFeature: *TonerDarkness 8
	<< /DeviceRenderingInfo << /Type 98 /PrintDarkness 3 /TonerSaver false >> >> setpagedevice%%EndFeature
}efcl
sfcl{%%BeginFeature: *PageSize Letter
	<< /Policies << /PageSize 2 >> /PageSize [612 792] /ImagingBBox null >> setpagedevice%%EndFeature
}efcl
sfcl{%%BeginFeature: *PQET FalseM1 dict dup /PostRenderingEnhanceDetails 1 dict dup /REValue 0 put put setpagedevice%%EndFeature
}efcl
sfcl{%%BeginFeature: *Collate True<< /Collate true >> setpagedevice%%EndFeature
}efcl
sfcl{%%BeginFeature: *SepPages PrinterS%%EndFeature
}efcl
sfcl{%%BeginFeature: *SepSource PrinterS%%EndFeature
}efcl
()setjob/mT[1 0 0 -1 30 761]def%RBIIncludeStartNup/sD 16 dict def%%IncludeFont: TimesNewRomanPS-BoldMT/f47/TimesNewRomanPS-BoldMTfindfont :ff fD/f67 f47 14 scf%%IncludeFont: TimesNewRomanPSMT/f80/TimesNewRomanPSMTfindfont :ff fD/f98 f80 12 scf%%IncludeFont: TimesNewRomanPS-ItalicMT/f111/TimesNewRomanPS-ItalicMTfindfont :ff fD/f132 f111 12 scf/f145 f47 12 scf%%IncludeFont: Symbol/f167/Symbol%%BeginFile: lw8_euroSpecial-1.01/nEro/Symbol findfontbeginFontTypedup dup dup dup1 eq exch 5 eq or exch 42 eq or exch 43 eq or exch 3 eq or{currentdict/CharStrings known{CharStrings/Euro known}{true}ifelse}{true}ifelseenddefnEro startnoload10 dict begin/FontInfo 2 dict dup begin/version(001.000)def/Notice(Copyright \251 1998 Apple Computer Inc.)defend def/FontName/Europatch def/Encoding StandardEncoding def/PaintType 0 def/FontType 1 def/FontMatrix[0.001 0 0 0.001 0 0]def/FontBBox{21 -9 714 689}defcurrentdict enddup/Private 15 dict dup begin/|-{def}def/|{put}def/BlueValues[-19. 0. 487. 500. 673. 688.]|-/BlueScale 0.0526315789 def/MinFeature{16 16}|-/StdHW[92.]def/StdVW[85.]def/StemSnapH[92.]def/StemSnapV[85.]def/ForceBoldThreshold .5 def/ForceBold false def/password 5839 def/Subrs 16 arraydup 0<118cade7978c9a8ab47e7be71fa277>|dup 1<118cade79273658a5c>|dup 2<118cade7927297416d>|dup 3<118cade712>|dup 4<118cade795e45b7819d5b190>|dup 5<118cade712>|dup 6<118cade712>|dup 7<118cade79266e29ec4a224>|dup 8<118cade7926513197e6246425e>|dup 9<118cade792645d0ab32061e2268dfb>|dup 10<118cade792638e135e25d183266bd7f81e>|dup 11<118cade7927439b1>|dup 12<118cade7e644d1e7a50cacbc>|dup 13<118cade78f9ed1e3fe>|dup 14<118cade7e0d1ca3c54>|dup 15<118cade78f9edf3959>||-2 index/CharStrings 2 dict dup begin/A<118cade7b98bc82571af5aee01f90103a394bff91b0ba5c07ffa5d64ff811d8a387b6ec3142e3c549269606becee2076d12186aced6d3558a7713c6635c038cf4bf8afc6076160e8ead2af8859f19c117df2af5a56fd0c316f31ba13c15c7ce3110f9d01081b9aeb32fbe8a3618047f1e92e6e08818a4bb109a567da3f88883d9eb237a4257a9535d72a66345d6a36508b96c2805a310781de324fe691942dd7947ac02673d33943c06ae133ef93a7292b6dab>|-/.notdef<118cade79205cabfe7>|-end endput putdup/FontName get exch definefont popnEro endnoload/subfontdict Z/subfontcharsize Zfindfont duplength 2 add dictbegin{1 index/FID ne 2 index/UniqueID ne and{def}{pop pop}ifelse}forallnEro not{/subfontdict[/Europatch findfont FontMatrixmatrix invertmatrix makefontdup dup length 2 add dictbegin{1 index/FID ne 2 index/UniqueID ne and{def}{pop pop}ifelse}forall/PaintType 2 def/StrokeWidth 12 def/customfont currentdictenddefinefont]defgsaveinitgraphics/subfontcharsize[subfontdict 0 get setfont(A)stringwidth0 0 moveto(A)true charpathpathbbox]defgrestore/CharStrings CharStringsdup length 1 add dictlevel2{copy}{begin{def}forallcurrentdictend}ifelsedup/Euro{subfontcharsize aload popsetcachedevicepopsubfontdict currentdict/PaintType getdup 0 ne{pop 1}ifget setfont0 0 moveto(A)show}bind putdef}if/Encoding Encoding 256 array copydup 240/apple pd160/Euro putdeffontname/customfont eq{/Symbol}{fontname}ifelsecurrentdictenddefinefont :ff fD%%EndFile/f179 f167 12 scf/f192 f111 9 scf{/Courier findfont[10 0 0 -10 0 0]:mf setfont}stopped{$error/newerror F put}if% PostScript Prolog for use with Macintosh Frame Products 7.0% Copyright (c) 1986-2002 Adobe Systems Inc.  All rights reserved.%%BeginProcSet: "FrameMacDict" 556 12userdict/FrameMacDict 250 dict put FrameMacDict begin systemdict/setpackingknown{/fMSP currentpacking def true setpacking}if[/fM1/fMi1/fMi2/fM2/fM3/fMcl/fMAB/fM5/fM6/fM0/fM8/fM9/fMBC/fMC/fMCD/fMCK/fMCR/fMCS/fMib/fMCN/fMCE/fMCO/fMef/fMet/fMeh/fMew/fMey/fMex/fMei/fMej/fMek/fMel/fMeb/fMGC/fMGL/fMGM/fMIT/fMIx/fMJB/fMJC/fMJG/fMJK/fMJM/fMJR/fMJY/fMK/fML1/fMM/fMCP/fMNC/fMNg/fMND/fMOx/fMPC/fMPG/fMPH/fMPt/fMRC/fMS/fMSJ/fMUC/fMUM/fMUY/fMY/fMdm/fMax/fMa2/fMi/fMk/fMSD/fMcK/fMcu/fMsg/fms/fMTV/fmBS/fMdp/freq/sangle/sflipx/sflipy/pflipx/pflipy/xx/yy/xindex/yindex/fM1B/fM0B/fMdc/fMds]{0 def}forall/T true def/F false def/FmBD{bind def}bind def/fmXD{exch def}FmBD/fmBx{dup length exch{dup/FrameMacDict eq{pop FrameMacDict}{dup type dup/arraytype eq exch/packedarraytype eq or{dupxcheck{fmBi}if}if}ifelse exch}forall systemdict/setpacking known{packedarray}{array astore}ifelse cvx}FmBD/fmBi{bind fmBx}FmBD/fmax{2 copy lt{exch}if pop}FmBD/fmin{2 copy gt{exch}if pop}FmBD/fML1/languagelevel where{pop languagelevel}{1}ifelse 2 lt def/fMCE fML1{/statusdict where{pop statusdict/processcolorsknown{statusdict/processcolors get exec 1 gt}{F}ifelse}{F}ifelse}{T}ifelse def/fMXN/statusdict where{pop statusdict/product known{statusdict/product get}{(Unknown)}ifelse}{(Unknown)}ifelse def/fMHq fMXN(LaserWriter-Sim)eq def fML1{userdict/FrMacBegin{FrameMacDict begin}fmBi put/FmE{end}FmBD}{/fMdc 6 array defuserdict/FrMacBegin{FrameMacDict begin/fMds currentcolorspace store mark 0 0 00 0 currentcolor fMdc astore pop cleartomark}fmBi put/FmE{fMds setcolorspacemark fMdc aload pop setcolor cleartomark end}FmBD}ifelse/fMcu F def/fMsg F def/fMSD F def/fmSK{pop pop pop pop}FmBD/FmCB{/fMcK fmXD}FmBD/fMCB{fMcK fMAB and}FmBD/FmG/gsave load def/FmR/grestore load def/fm_l/grestoreall load def/fm_v/save load def/fm_g/setgray load def/fm_r/setrgbcolor load def/fm_h/sethsbcolorload def/fm_f/fill load def/fm_e/eofill load def/fm_t/stroke load def/fm_m/imagemask load def/fm_i/image load def/fm_s/show load def/fm_a/ashow load def/fm_w/widthshow load def/fm_y/awidthshow load def/RealKshow/kshow load def/fm_si systemdict/image get def/fm_sg systemdict/setgray get def/fm_scsystemdict/currentgray get def/fm_su systemdict/settransfer get def/fm_sxsystemdict/currenttransfer get def fMCE{/SysColorimage systemdict/colorimageget def}if/fMdm matrix def/fMax matrix def/fMa2 matrix def/fmSM{fMaxcurrentmatrix pop}FmBD/fmRM{fMax setmatrix}FmBD/FmRF{currentpoint 2 copytranslate 4 2 roll{-1 1 scale}if rotate neg exch neg exch translate}FmBD/FmU4true def/IsDistiller5050{mark systemdict dup currentdistillerparams/CoreDistVersion get dup 5050 ge{cleartomark true}{5000 lt{cleartomark false}{dup dup/product known exch/buildtime known and not{cleartomark false}{dup dup/product get(Distiller)eq{/buildtime get 985000000 gt{cleartomark true}{cleartomark false}ifelse}{dup dup/product get(Mac Distiller)eq{/buildtime get985000000 gt{cleartomark true}{cleartomark false}ifelse}{dup dup/product(Acrobat Distiller Server)eq{cleartomark true}{1183615869 internaldict/makeoperator known{cleartomark true}{cleartomark false}ifelse}ifelse}ifelse}ifelse}ifelse}ifelse}ifelse}bind def/fMcK true def systemdict/pdfmark knownsystemdict/currentdistillerparams known and{/fMAB true def/FmPD/pdfmark loaddef/FmPT/fm_s load def currentdistillerparams/CoreDistVersion get 2000 ge{/FmPD2/pdfmark load def IsDistiller5050{/FmPD4/pdfmark load def}{/FmPD4{FmU4{(%%[Acrobat Distiller 5.05 and higher is required to generate Tagged PDF]%%)=(%%[Tagged PDF is not generated.]%%)= flush}if/FmU4 false def cleartomark}FmBD}ifelse/fmCG true def/FmND{mark exch/Dest exch 5 3 roll/View[/XYZ 5 -2 roll FmDCnull]/DEST FmPD}FmBD/FmPA{fmCG{pop pop pop}{FmND}ifelse}FmBD}{/FmPD4/cleartomark load def/FmPD2/cleartomark load def/FmPA{pop pop pop}FmBD/FmND{poppop pop}FmBD}ifelse}{/fMAB false def/FmPD/cleartomark load def/FmPD2/cleartomark load def/FmPD4/cleartomark load def/FmPT/pop load def/FmPA{pop poppop}FmBD/FmND{pop pop pop}FmBD}ifelse/FmDC{transform fMdm defaultmatrixitransform round cvi exch round cvi exch}FmBD/FmBx{dup 3 index lt{3 1 roll exch}if 1 index 4 index lt{4 -1 roll 3 1 roll exch 4 1 roll}if}FmBD/FmBz{3 -1 rollsub 3 1 roll exch sub exch 0 0 4 1 roll 4 1 roll}FmBD/fmkn{2 copy known{get T}{pop pop false}ifelse}FmBD/fmfp{exch currentfont dup/FontMatrix get exch/FontInfo fmkn{T}{currentfont/df fmkn{dup/FontInfo fmkn{3 1 roll/FontMatrix getmtx concatmatrix exch T}{pop pop pop F}ifelse}{pop pop F}ifelse}ifelse{3 -1roll fmkn{exch 0 3 1 roll dtransform neg exch pop exch pop}{pop exec}ifelse}{exec}ifelse}FmBD/FmTx{/fM3 fmXD/fM2 fmXD/fM1 fmXD 0 32 fM1 fM3 stringwidth popfM2 sub fM3 length div sub 0 fM3 fm_y}FmBD/fMOx matrix def fMOx currentmatrixpop/FmSO{/FmOs save def fmSM fMOx setmatrix}FmBD/FmIO{fmRM}FmBD/FmEO{FmOsrestore}FmBD/fmSC{0 1 fMGL{dup fMRC exch get exch dup fMNC exch get exch dupfMBC exch get exch 4 1 roll/fmRY fmGG exec fMeb fMC eq{pop pop pop}{fMeb fMM eq{pop pop exch pop}{fMeb fMY eq{pop 3 1 roll pop pop}{fMeb fMK eq{4 1 roll poppop pop}{pop pop pop pop 0}ifelse}ifelse}ifelse}ifelse 1 exch sub 255 mul fMGC3 1 roll put}for}FmBD/fmSW{/fMOP fmGG{nulldevice}{fMNg{{10000000 div}}{{10000000 div 1 exch sub}}ifelse fm_su}ifelse}FmBD fML1{/Fmi{save userdict/fM7 3-1 roll put/fM9 F def{{dup length dup 1 sub/fMGL fmXD array/fMGC fmXD/fMBC fmXD/fMNC fmXD/fMRC fmXD fMeb fMCP ne{fmSC{fMGL mul cvi fMGC exch get}currenttransfer fmcp fm_su}{fMCE{currentcolortransfer/gryt fmXD/blut fmXD/grntfmXD/redt fmXD 0 1 fMGL{/fMIx fmXD/fMUC 1 fMRC fMIx get sub def/fMUM 1 fMNCfMIx get sub def/fMUY 1 fMBC fMIx get sub def/fMk fMUC fMUM fmin fMUY fmin def/FmU fMk/currentundercolorremoval where{pop currentundercolorremoval exec}{pop0}ifelse def fMRC fMIx 1 0 fMUC FmU sub fmax sub redt exec put fMNC fMIx 1 0fMUM FmU sub fmax sub grnt exec put fMBC fMIx 1 0 fMUY FmU sub fmax sub blutexec put fMGC fMIx 1 fMk/currentblackgeneration where{popcurrentblackgeneration exec}{}ifelse sub gryt exec put}for{fMGL mul cvi fMRCexch get}{fMGL mul cvi fMNC exch get}{fMGL mul cvi fMBC exch get}{fMGL mul cvifMGC exch get}setcolortransfer/setundercolorremoval where{pop{pop 0}setundercolorremoval}if/setblackgeneration where{pop{}setblackgeneration}if/fM9T def}{0 1 fMGL{fMGC exch dup dup fMRC exch get .3 mul exch dup fMNC exch get.59 mul exch fMBC exch get .11 mul add add put}for{fMGL mul cvi fMGC exch get}currenttransfer fmcp fm_su}ifelse}ifelse}{fMeb dup fMK eq exch fMCP eq or{duplength 1 sub/fMGL fmXD/fMGC fmXD{fMGL mul cvi fMGC exch get}currenttransferfmcp fm_su}{pop fmSW}ifelse}ifelse}{fMeb dup fMK eq exch fMCP eq or{{{1 exchsub}currenttransfer fmcp fm_su}if}{pop fmSW}ifelse}ifelse/fMIT fmXD/fM5 fmXD/fM8 fmXD/fM6 fmXD/fMrw fmXD/fMcl fmXD translate rotate scale{-1 1 scale}iffMIT 1 ne{{1 exch sub fMIT mul 1 exch sub}currenttransfer exch fmcp fm_su}if/fMi1 fM8 string def fMcl fMrw fM6[fMcl 0 0 fMrw fMcl 2 div fMrw 2 div]{currentfile fMi1 fM5{readstring}{readhexstring}ifelse pop}fM9{{fMi1}{fMi1}T 3SysColorimage}{fm_si}ifelse fM7 restore}FmBD}{/Fmi{save userdict/fM7 3 -1 rollput/fM9 F def{{dup length dup 1 sub/fMGL fmXD array/fMGC fmXD/fMBC fmXD/fMNCfmXD/fMRC fmXD fMeb fMCP ne{fmSC[/Indexed/DeviceGray fMGL{fMGC exch get}]setcolorspace}{[/Indexed/DeviceRGB fMGL{dup fMRC exch get exch dup fMNC exchget exch fMBC exch get}]setcolorspace}ifelse}{dup length 1 sub/fMGL fmXD/fMGCfmXD[/Indexed/DeviceGray fMGL{fMGC exch get}]setcolorspace fMeb dup fMK ne exchfMCP ne and{fmSW}if}ifelse}{1 5 index bitshift 1 sub/fMGL fmXD[/Indexed/DeviceGray fMGL 5 -1 roll{{fMGL div 1 exch sub}}{{fMGL div}}ifelse]setcolorspace fMeb dup fMK ne exch fMCP ne and{fmSW}if}ifelse/fMIT fmXD/fM5fmXD/fM8 fmXD/fM6 fmXD/fMrw fmXD/fMcl fmXD translate rotate scale{-1 1 scale}iffMIT 1 ne{{1 exch sub fMIT mul 1 exch sub}currenttransfer exch fmcp fm_su}if/fMi1 fM8 string def 7 dict begin/ImageType 1 def/Width fMcl def/Height fMrwdef/ImageMatrix[fMcl 0 0 fMrw fMcl 2 div fMrw 2 div]def/DataSource{currentfilefMi1 fM5{readstring}{readhexstring}ifelse pop}def/BitsPerComponent fM6 def/Decode[0 fMGL]def currentdict end fm_si fM7 restore}FmBD}ifelse/fmIv{[{1 exchsub}/exec load dup currenttransfer exch]cvx bind fm_su}FmBD/fm3b{dup fMCP eq{pop 0 1 4 index length 1 sub{3 index 1 index get .3 mul 3 index 2 index get .59mul 3 index 3 index get .11 mul add add round cvi 4 index 3 1 roll put}for poppop}{/fmRY fmGG 0 1 6 index length 1 sub{5 index 1 index get 255 div 5 index 2index get 255 div 5 index 3 index get 255 div 4 index exec 6 index fMC eq{poppop pop}{6 index fMM eq{pop pop exch pop}{6 index fMY eq{pop 3 1 roll pop pop}{6 index fMK eq{4 1 roll pop pop pop}{pop pop pop pop 0}ifelse}ifelse}ifelse}ifelse 255 mul round cvi 6 index 3 1 roll put}for pop pop pop pop}ifelse}FmBD/Fmci{save userdict/fM7 3 -1 roll put/fMIT fmXD/fM5 fmXD/fM8 fmXD/fM6 fmXD/fMrwfmXD/fMcl fmXD/fMi1 fM8 string def/fM0 fM8 3 idiv def/fMs fMi1 0 fM0getinterval def/fMs2 fMi1 fM0 dup getinterval def/fMs3 fMi1 fM0 dup 2 mul exchgetinterval def translate rotate scale{-1 1 scale}if fMIT 1 ne{{1 exch sub fMITmul 1 exch sub}currenttransfer exch fmcp fm_su}if fMcl fMrw fM6[fMcl 0 0 fMrwfMcl 2 div fMrw 2 div]fMeb fMCP eq fMCE and{{currentfile fMi1 fM5{readstring}{readhexstring}ifelse pop pop fMs}{fMs2}{fMs3}T 3 SysColorimage}{{fmIvcurrentfile fMi1 fM5{readstring}{readhexstring}ifelse pop pop fMs fMs2 fMs3fMeb fm3b}fm_si}ifelse fM7 restore}FmBD/fm4b{dup fMCP eq{pop 0 1 5 index length1 sub{2 copy get dup 6 index 3 index get add 255 fmin .3 mul 1 index 6 index 4index get add 255 fmin .59 mul 3 -1 roll 5 index 4 index get add 255 fmin .11mul add add round cvi 5 index 3 1 roll put}for pop pop pop}{dup fMC eq{pop poppop pop}{dup fMM eq{pop pop pop exch pop}{dup fMY eq{pop pop exch pop exch pop}{fMK eq{4 1 roll pop pop pop}{pop pop pop 0 1 2 index length 1 sub{1 index exch0 put}for}ifelse}ifelse}ifelse}ifelse}ifelse}FmBD/Fmc4{save userdict/fM7 3 -1roll put/fMIT fmXD/fM5 fmXD/fM8 fmXD/fM6 fmXD/fMrw fmXD/fMcl fmXD/fMi1 fM8string def/fM0 fM8 4 idiv def/fMs fMi1 0 fM0 getinterval def/fMs2 fMi1 fM0 dupgetinterval def/fMs3 fMi1 fM0 dup 2 mul exch getinterval def/fMs4 fMi1 fM0 dup3 mul exch getinterval def translate rotate scale{-1 1 scale}if fMIT 1 ne{{1exch sub fMIT mul 1 exch sub}currenttransfer exch fmcp fm_su}if fMcl fMrw fM6[fMcl 0 0 fMrw fMcl 2 div fMrw 2 div]fMeb fMCP eq fMCE and{{currentfile fMi1 fM5{readstring}{readhexstring}ifelse pop pop fMs}{fMs2}{fMs3}{fMs4}T 4SysColorimage}{fmIv{currentfile fMi1 fM5{readstring}{readhexstring}ifelse poppop fMs fMs2 fMs3 fMs4 fMeb fm4b}fm_si}ifelse fM7 restore}FmBD fML1{/fmAn{transform round .5 sub exch round .5 sub exch itransform}FmBD/fmAc{transformround 1.5 sub exch round 1.5 sub exch itransform}FmBD/fmDn{dtransform roundexch round exch idtransform}FmBD/fmLn{0 dtransform exch cvi 2 idiv 2 mul .1 addexch idtransform pop}FmBD/FmCv{fmDn 6 2 roll fmDn 6 2 roll fmDn 6 2 rollrcurveto}FmBD}{T setstrokeadjust/fmAn{}FmBD/fmAc{}FmBD/fmDn{}FmBD/fmLn{}FmBD/FmCv{rcurveto}FmBD}ifelse/FmM{fmAn moveto}FmBD/M{moveto}FmBD/N{0 rmoveto}FmBD/S{fm_s}FmBD/A{0 exch fm_a}FmBD/W{0 exch 32 exch fm_w}FmBD/X{0 exch 0 32 5 2roll fm_y}FmBD/fmQP{fML1 fMGM or not{FmG dup 1 fm_g exec FmR}if exec}FmBD/FmB{newpath fmAn moveto}FmBD/FmL{rlineto}FmBD/FmAL{fmAn lineto}FmBD/FmSo{fmLnsetlinewidth setlinecap{fm_t}fmQP 0 0 moveto}FmBD/FmS{fmLn setlinewidthclosepath{fm_t}fmQP 0 0 moveto}FmBD/FmDS{fmLn setlinewidth setlinecap{closepath}if setdash{fm_t}fmQP[]0 setdash 0 0 moveto}FmBD/FmFl{FmG{fm_e}fmQP FmR}FmBD/fmq{fmDn 4 2 roll fmAn newpath moveto 1 index 0 rlineto 0 exch rlineto neg 0rlineto closepath}FmBD/FmqP{fmq fmLn setlinewidth{fm_t}fmQP 0 0 moveto}FmBD/FmqF{fmq FmG{fm_f}fmQP FmR}FmBD/FmKp{{currentpoint}stopped{F 5 1 roll}{T 7 3roll}ifelse fmDn 4 2 roll fmAn newpath moveto 1 index 0 rlineto 0 exch rlinetoneg 0 rlineto closepath clip{moveto}{newpath}ifelse}FmBD/FmKb{{currentpoint}stopped}FmBD/FmKe{clip{newpath}{moveto}ifelse}FmBD/FmAF{FmG newpath fmAntranslate not{0.0 0.0 moveto}if rotate fmDn scale 0.0 0.0 1.0 5 3 roll arcclosepath{fm_f}fmQP FmR}FmBD/FmAP{FmG{setdash}if fmLn setlinewidth setlinecapfmSM newpath 2 index 2 div add exch 3 index 2 div sub exch fmAn 2 index 2 divsub exch 3 index 2 div add exch translate rotate scale 0.0 0.0 1.0 5 3 rollexch arcn{closepath}if fmRM{fm_t}fmQP FmR}FmBD/FmST{FmG fmAn translate .3 fmLnsetlinewidth 0 setlinecap 0 setlinejoin newpath 1 fm_g 0 0 10 0 360 arc fm_f 0fm_g 0 0 10 0 360 arc fm_t 36{1 0 moveto 0 0 10 -2.5 2.5 arc fm_f 10 rotate}repeat FmR}FmBD/FmSL{FmG fmAn translate .25 fmLn setlinewidth 0 setlinecap 0setlinejoin newpath 1 fm_g 0 0 10 0 360 arc fm_f 0 fm_g 10 .5 fmLn neg .1{0 0 3-1 roll 0 360 arc fm_t}for FmR}FmBD/fMCP 0 def/fMC 1 def/fMM 2 def/fMY 3 def/fMK 4 def/fMS 5 def/fMN 6 def/fMNg 0 currenttransfer exec .5 gt def/fMib fMCPdef/fMJK 0 def/fMJY 0 def/fMJM 0 def/fMJC 0 def/fMJR 1 def/fMJG 1 def/fMJB 1def/fMPG 0 def/fMTV 1 def/fMPt null def/fMCK[0 0 0 1(Black)0 0 0]def/fmCH{fML1{14 dict dup begin fMCE{/HalftoneType 2 def currentcolorscreen[/GraySpotFunction/GrayAngle/GrayFrequency/BlueSpotFunction/BlueAngle/BlueFrequency/GreenSpotFunction/GreenAngle/GreenFrequency/RedSpotFunction/RedAngle/RedFrequency]{exch def}forall}{/HalftoneType 1 def currentscreen[/SpotFunction/Angle/Frequency]{exch def}forall}ifelse statusdict/checkscreen known{statusdict/accuratescreens get exec}{F}ifelse/AccurateScreens exch def end}{currenthalftone}ifelse}FmBD/fmSH{fML1 fMeb fMCP ne or{begin statusdict/checkscreen known{currentdict/AccurateScreens known{AccurateScreens}{F}ifelsestatusdict/setaccuratescreens get exec}if HalftoneType 1 eq{Frequency Angle/SpotFunction load setscreen}{HalftoneType 2 eq{fMeb fMCP eq fMCE and{RedFrequency RedAngle/RedSpotFunction load GreenFrequency GreenAngle/GreenSpotFunction load BlueFrequency BlueAngle/BlueSpotFunction loadGrayFrequency GrayAngle/GraySpotFunction load setcolorscreen}{fMeb fMC eq{RedFrequency RedAngle/RedSpotFunction load}{fMeb fMM eq{GreenFrequencyGreenAngle/GreenSpotFunction load}{fMeb fMY eq{BlueFrequency BlueAngle/BlueSpotFunction load}{fMeb fMY eq currentdict/BlackFrequency known and{BlackFrequency BlackAngle/BlackSpotFunction load}{GrayFrequency GrayAngle/GraySpotFunction load}ifelse}ifelse}ifelse}ifelse setscreen}ifelse}if}ifelseend}{sethalftone}ifelse}FmBD/FmCS{17 dict begin/HalftoneType 2 def/AccurateScreens exch def/GraySpotFunction exch def/GrayAngle exch def/GrayFrequency exch def/BlackSpotFunction exch def/BlackAngle exch def/BlackFrequency exch def/BlueSpotFunction exch def/BlueAngle exch def/BlueFrequency exch def/GreenSpotFunction exch def/GreenAngle exch def/GreenFrequency exch def/RedSpotFunction exch def/RedAngle exch def/RedFrequency exch def currentdict dup end/fMPH exch def fmSH}FmBD/FmSS{5 dictbegin/HalftoneType 1 def/AccurateScreens exch def/SpotFunction exch def/Angleexch def/Frequency exch def currentdict dup end/fMPH exch def fmSH}FmBD/fMPHfmCH def/fmcp{cvlit exch cvlit exch 2 copy length exch length add array dup 0 4index putinterval dup 3 index length 3 index putinterval 3 1 roll pop pop cvx}FmBD/fmEp{sub dup 0 lt{neg}if .001 le}FmBD/fmQC{2 copy 0 get exch 0 get fmEp{2copy 1 get exch 1 get fmEp{2 copy 2 get exch 2 get fmEp{3 get exch 3 get fmEp}{pop pop F}ifelse}{pop pop F}ifelse}{pop pop F}ifelse}FmBD/fmQR{2 copy 5 getexch 0 get fmEp{2 copy 6 get exch 1 get fmEp{7 get exch 2 get fmEp}{pop pop F}ifelse}{pop pop F}ifelse}FmBD/FmSC{/fMib fMS def/fMJB fmXD/fMJG fmXD/fMJR fmXD/fMCN fmXD/fMJK fmXD/fMJY fmXD/fMJM fmXD/fMJC fmXD}FmBD/FmSP{/fMib fmXD fmGbfmCC}FmBD/fMSC 1 dict def/FrameSetSpotColors{dict FrameMacDict/fMSC 3 -1 rollput}fmBi def/FrameSpot{FrameMacDict/fMSC get exch dup 4 get exch put}fmBi def/fMGM T def/fm4q{4{4 index eq 8 1 roll}repeat pop pop pop pop and and and}FmBD/fmGb{/fMeb fMCP def/fMcu/setcustomcolor where{pop T}{F}ifelse def/fMsg/setseparationgray where{pop T}{F}ifelse def/setcmykcolor where{/fMSD T def/setcmykcolor get dup/fm_x fmXD/fmSK fmXD}{/fMSD F def/fmSK{4 1 roll 3{3 indexadd 0 fmax 1 fmin 1 exch sub 3 1 roll}repeat fm_r pop}FmBD}ifelse fMSD{fMcu{0fm_sx exec 1 fm_sx exec eq{/fMeb fMN store}{/fm_x where{pop 1 0 0 0 fm_x fm_sc0 1 0 0 fm_x fm_sc 0 0 1 0 fm_x fm_sc 0 0 0 1 fm_x fm_sc 4{4 copy}repeat 0 1 11 fm4q{/fMeb fMC store}if 1 0 1 1 fm4q{/fMeb fMM store}if 1 1 0 1 fm4q{/fMebfMY store}if 1 1 1 0 fm4q{/fMeb fMK store}if 1 1 1 1 fm4q{/fMeb fMN store}if}if}ifelse}if}if}FmBD/fmCC{/fMND F def/fMCT fMTV 1 fMPG sub mul def fMib fMCP eq{fMGM fML1 or not{fMeb fMCP eq{fMCB not{[/Pattern[/DeviceCMYK]]setcolorspacefMCK 0 4 getinterval aload pop fMCT 1 lt{4{fMCT mul 4 1 roll}repeat}if}{[/Pattern[/DeviceRGB]]setcolorspace fMCK 5 3 getinterval aload pop fMCT 1 lt{3{1exch sub fMCT mul 1 exch sub 3 1 roll}repeat}if}ifelse}{fMcu fMCS and{fMCB not{fMCK 0 5 getinterval aload pop findcmykcustomcolor fMCT setcustomcolor}{5 1 7{fMCK exch get 1 exch sub fMCT mul 1 exch sub}for fm_r}ifelse}{fMCB not{0 1 3{fMCK exch get fMCT mul}for fm_x}{5 1 7{fMCK exch get 1 exch sub fMCT mul 1 exchsub}for fm_r}ifelse}ifelse currentgray[/Pattern[/DeviceGray]]setcolorspace}ifelse fMPt setcolor}{fMsg fMCR and{1 fMCT sub setseparationgray}{fMcu fMCS and{fMCB not{fMCK 0 5 getinterval aload pop findcmykcustomcolor fMCTsetcustomcolor}{5 1 7{fMCK exch get 1 exch sub fMCT mul 1 exch sub}for fm_r}ifelse}{fMCB not fMSD and{0 1 3{fMCK exch get fMCT mul}for fm_x}{5 1 7{fMCKexch get 1 exch sub fMCT mul 1 exch sub}for fm_r}ifelse}ifelse}ifelse}ifelse}{fMGM fML1 or not{[/Pattern[/DeviceGray]]setcolorspace 1 fMCT sub fMPt setcolor}{1 fMCT sub fm_g}ifelse}ifelse}FmBD/K{fMCK astore pop/fMCS T def/fMCR F def/fMTV exch def fmCC}FmBD/H{0 0 0 1(Black)0 0 0 fMCK astore pop/fMCS F def/fMCRT def/fMTV exch def fmCC}FmBD/fMCS F def/fMCR F def/fmPK{fMCK astore pop/fMCS Fdef/fMCR F def/fMTV exch def fmCC}FmBD/FmCC{1 0 0 0(Cyan)0 1 1 fmPK}FmBD/FmCM{01 0 0(Magenta)1 0 1 fmPK}FmBD/FmCY{0 0 1 0(Yellow)1 1 0 fmPK}FmBD/FmCK{0 0 0 1(Black)0 0 0 fmPK}FmBD/G{FmCK}FmBD/B{1 G}FmBD/FmOP/setoverprint where{pop/setoverprint}{/pop}ifelse load def fML1{/patScreenDict 7 dict dup begin<0f1e3c78f0e1c387>[45{pop}{exch pop}.5 2 sqrt]FmBD<0f87c3e1f0783c1e>[135{pop}{exch pop}.5 2 sqrt]FmBD<cccccccccccccccc>[0{pop}dup .5 2]FmBD<ffff0000ffff0000>[90{pop}dup .5 2]FmBD<8142241818244281>[45{2 copy lt{exch}if pop}dup .75 2 sqrt]FmBD<0102040810204080>[45{pop}{exch pop}.875 2 sqrt]FmBD<8040201008040201>[135{pop}{exch pop}.875 2 sqrt]FmBD end def}{/fMPP 5 dict dup begin<0f87c3e1f0783c1e>{3setlinewidth -1 -1 moveto 9 9 lineto fm_t 4 -4 moveto 12 4 lineto fm_t -4 4moveto 4 12 lineto fm_t}FmBD<0f1e3c78f0e1c387>{3 setlinewidth -1 9 moveto 9 -1lineto fm_t -4 4 moveto 4 -4 lineto fm_t 4 12 moveto 12 4 lineto fm_t}FmBD<8142241818244281>{1 setlinewidth -1 9 moveto 9 -1 lineto fm_t -1 -1 moveto 9 9lineto fm_t}FmBD<8040201008040201>{1 setlinewidth -1 -1 moveto 9 9 lineto fm_t4 -4 moveto 12 4 lineto fm_t -4 4 moveto 4 12 lineto fm_t}FmBD<0102040810204080>{1 setlinewidth -1 9 moveto 9 -1 lineto fm_t -4 4 moveto 4 -4 lineto fm_t 4 12moveto 12 4 lineto fm_t}FmBD end def/fMPD 15 dict dup begin/PatternType 1 def/PaintType 2 def/TilingType 3 def/BBox[0 0 8 8]def/XStep 8 def/YStep 8 def/PaintProc{begin fMPP fmBS known{fMPP fmBS get exec}{8 8 T[1 0 0 -1 0 8]fmBSfm_m}ifelse end}FmBD end def}ifelse/fMdp 72 0 fMdm defaultmatrix dtransform dupmul exch dup mul add sqrt def/freq fMdp dup 72 div round dup 0 eq{pop 1}if 8mul div def/sangle 1 0 fMdm defaultmatrix dtransform exch atan def sangle fMa2rotate fMdm defaultmatrix fMa2 concatmatrix dup 0 get/sflipx exch def 3 get/sflipy exch def fML1{/fmgF{fMa2 exch get mul 0 lt{-1}{1}ifelse}FmBD}if/fmPMfML1{{dup patScreenDict exch known{patScreenDict exch get aload pop freq mul 52 roll fMa2 currentmatrix 1 get 0 ne{3 -1 roll 90 add 3 1 roll sflipx 1 fmgFsflipy 2 fmgF mul}{sflipx 0 fmgF sflipy 3 fmgF neg mul}ifelse 0 lt{exch pop}{pop}ifelse fMNg{{neg}fmcp}if bind systemdict/setscreen get exec}{/fmBS fmXD/fM1B 0 def/fM0B 0 def freq 0 fMa2 currentmatrix 1 get 0 ne{90 add/pflipxsflipx 1 fmgF def/pflipy sflipy 2 fmgF def}{/pflipx sflipx 0 fmgF def/pflipysflipy 3 fmgF neg def}ifelse{pflipy mul/yy fmXD pflipx mul/xx fmXD/xindex xx 1add 2 div 8 mul cvi def/yindex yy 1 add 2 div 8 mul cvi def fmBS yindex xindex8 idiv add get 1 7 xindex 8 mod sub bitshift and 0 ne fMNg{not}if{/fM1B fM1B 1add def 1}{/fM0B fM0B 1 add def 0}ifelse}setscreen fM0B fM0B fM1B add div fMNg{1.0 exch sub}if}ifelse/fMPG exch def/fMGM F def fmCC}}{/fMPC 8 dict def{dupfMPC exch known{fMPC exch get}{dup fMPD/fmBS 3 -1 roll put fMPD matrixmakepattern dup fMPC 4 -1 roll 3 -1 roll put}ifelse/fMPt exch def/fMPG 0 def/fMGM F def fmCC}}ifelse FmBD/fmgr{fMGM not{/fMGM T def fML1{fMPH fmSH}if}if/fMPG exch def fmCC}FmBD/FmP{FrameFillPatternsArray exch get dup type/stringtype eq{fmPM}{fmgr}ifelse}FmBD/fMEd 40 dict def/fmPE{fMEd 3 1 roll fmBiput}bind def/fmgS 32 array def/fMgt 0 def/fMtp 0 def/fmSG{fmgS fMgt get dupnull eq{pop fmgS fMgt 10 dict dup 4 1 roll put}if 3 1 roll put}FmBD/fmGG{fMgt-1 -1{fmgS exch get dup null ne{2 copy exch known{2 copy exch get/_notdef ne{exch get dup exit}if}if}if pop}for pop}FmBD/gsave{FrameMacDict begin FmG/fMgtfMgt 1 add def fmgS fMgt get dup null eq{pop}{dup dup{pop/_notdef put dup}forall pop pop}ifelse end}fmPE/grestore{FrameMacDict begin fMgt fMtp gt{/fMgtfMgt 1 sub def}if FmR null fmCN end}fmPE/grestoreall{FrameMacDict begin/fMgtfMtp def fm_l null fmCN end}fmPE/save{FrameMacDict/fm_v get exec FrameMacDictbegin/fMgt fMgt 1 add def fmgS fMgt get dup null eq{pop}{dup dup{pop/_notdefput dup}forall pop pop}ifelse/fMtp fMgt def end}fmPE/fMND F def/fMCC null fmSG/fMOP F fmSG/fMKO F fmSG/fmRY{1 exch sub 3 1 roll 1 exch sub 3 1 roll 1 exchsub 3 1 roll 3 copy 2 copy le{pop}{exch pop}ifelse 2 copy le{pop}{exch pop}ifelse dup dup dup 6 1 roll 4 1 roll 7 1 roll sub 6 1 roll sub 5 1 roll sub 4 1roll}fmSG userdict/fM7 known not{userdict/FrameSuccessfull F put userdict/FrameEndPictStopped F put userdict/fM7 0 put}if/fmLC{fMSC{exch pop exch dup 3-1 roll fmQC{pop T exit}if}forall dup T ne{pop F}if}FmBD/fmLR{fMSC{exch popexch dup 3 -1 roll fmQR{pop T exit}if}forall dup T ne{pop F}if}FmBD/fmLM{fMSCexch known}FmBD/fmCN{fMND F fMib fMCP ne{/fMOP fmGG{/fMKO fmGG{pop T}if}if}ifdup/fMND exch def{pop pop}{exch dup null ne{exch pop dup type dup/integertypeeq exch/realtype eq or{fm_g}{setcolor}ifelse}{pop{1 fm_g}if}ifelse}ifelse}FmBD/findcmykcustomcolor{0 0 0 8 array astore}fmPE/findrgbcustomcolor{FrameMacDictbegin 4 1 roll 3 copy/fmRY fmGG exec 8 4 roll 8 array astore end}fmPE/findgraycustomcolor{0 0 0 exch 1 exch sub exch findcmykcustomcolor}fmPE/findhsbcustomcolor{FrameMacDict begin 4 1 roll gsave fm_h currentrgbcolorgrestore 4 -1 roll findrgbcustomcolor end}fmPE/setcustomcolor{FrameMacDictbegin dup type dup/integertype eq exch/realtype eq or not{1.0}if exch dup/fMCCexch fmSG dup 4 get dup fmLM{fMib fMS eq{fMCN eq{pop}{pop pop 0}ifelse}{pop poppop 0}ifelse}{pop fMib fMK eq{3 get mul}{fMib fMY eq{2 get mul}{fMib fMM eq{1get mul}{fMib fMC eq{0 get mul}{pop pop 0}ifelse}ifelse}ifelse}ifelse}ifelsedup 0 le/fMKO exch fmSG 1 exch sub fmCN end}fmPE/setoverprint{FrameMacDictbegin dup FmOP/fMOP exch fmSG null fmCN end}fmPE/currentoverprint{FrameMacDictbegin/fMOP fmGG end}fmPE/setrgbtocmyk{FrameMacDict begin/fmRY exch fmSG nullfmCN end}fmPE/currentrgbtocmyk{FrameMacDict begin/fmRY fmGG end}fmPE/fill{FrameMacDict begin fMND{newpath}{fm_f}ifelse end}fmPE/eofill{FrameMacDict beginfMND{newpath}{fm_e}ifelse end}fmPE/stroke{FrameMacDict begin fMND{newpath}{fm_t}ifelse end}fmPE/fmNX{load fMND{FmG fMa2 currentmatrix end nulldevice setmatrixexec currentpoint FrameMacDict/FmR get exec moveto}{end exec}ifelse}fmBi def/show{FrameMacDict begin/fm_s fmNX}fmPE/ashow{FrameMacDict begin/fm_a fmNX}fmPE/widthshow{FrameMacDict begin/fm_w fmNX}fmPE/awidthshow{FrameMacDict begin/fm_yfmNX}fmPE/kshow{FrameMacDict begin/RealKshow fmNX}fmPE/image{FrameMacDict begindup type/dicttype ne{fMib fMK eq{/fm_i load end exec}{FmG fmSW/fm_i load endexec FrameMacDict begin FmR end}ifelse}{fML1{(image)errordict/typecheck getexec}{dup begin ImageType 1 eq{currentcolorspace 0 get dup/DeviceGray eq{popDecode 0 get 0 eq Decode 1 get 1 eq and{pop Width Height BitsPerComponentImageMatrix/DataSource load fMEd/image get end end exec}{end/fm_i load end exec}ifelse}{dup/DeviceRGB eq exch/DeviceCMYK eq or{T 0 2 Decode length 2 sub{Decode exch get 0 eq and}for 1 2 Decode length{Decode exch get 1 eq and}for{popWidth Height BitsPerComponent ImageMatrix/DataSource load currentdict/MultipleDataSources known{MultipleDataSources}{F}ifelse{aload pop T}{F}ifelseDecode length 2 idiv fMEd/colorimage get end end exec}{end/fm_i load end exec}ifelse}{end/fm_i load end exec}ifelse}ifelse}{end/fm_i load end exec}ifelse}ifelse}ifelse}fmPE/separationimage{fm_i}fmPE%% The definition of the /imagemask (up to version @@/main/28) used to simulate the definition%% of /image. The structure of the code was the same, and both executed `nulldevice' for non-black%% plates. (/image executed `nulldevice' via `fmSW' call).%% This appears to be incorrect, because of the difference between `image' and `imagemask'%% operators. While `image' operator always paints with black color, which is why the%% definition of /image dicriminated between black and other colors plates, `imagemask'%% operator paints with the current color. Therefore, the discrimination between black and%% other colors plates in /imagemask definition, with sending non-black plates to `nulldevice'%% seems to be wrong, and is eliminated in this version.%%%% itenenbo, cahaverl 07/02/98%%/imagemask{FrameMacDict begin dup type/dicttype ne{/fm_m load end exec}{/fm_mload end exec}ifelse}fmPE/separationimagemask{fm_m}fmPE/colorimage{FrameMacDictbegin FmG dup 4 eq{fmIv pop{/fMP4 exch def/fMP3 exch def/fMP2 exch def/fMP1exch def{fMP1 fMP2 fMP3 fMP4 fMib fm4b}fm_si}{/fMP1 exch def 1 index 8 ne{(colorimage)errordict/rangecheck get exec}if/fMs 4 index string def/fMs2 4index string def/fMs3 4 index string def/fMs4 4 index string def{fMP1 0 1 fMslength 1 sub{2 copy 4 mul 4 getinterval forall fMs4 5 index 3 -1 roll put fMs34 index 3 -1 roll put fMs2 3 index 3 -1 roll put fMs 3 -1 roll put}for pop fMsfMs2 fMs3 fMs4 fMib fm4b}fm_si}ifelse}{dup 3 eq{fmIv pop{/fMP3 exch def/fMP2exch def/fMP1 exch def{fMP1 fMP2 fMP3 fMib fm3b}fm_si}{/fMP1 exch def 1 index 8ne{(colorimage)errordict/rangecheck get exec}if/fMs 4 index string def/fMs2 4index string def/fMs3 4 index string def{fMP1 0 1 fMs length 1 sub{2 copy 3 mul3 getinterval forall fMs4 4 index 3 -1 roll put fMs3 3 index 3 -1 roll put fMs3 -1 roll put}for pop fMs fMs2 fMs3 fMib fm3b}fm_si}ifelse}{1 eq{pop image}{(colorimage)errordict/rangecheck get exec}ifelse}ifelse}ifelse FmR end}fmPE/customcolorimage{FrameMacDict begin FmG setcustomcolor currentgray 0 gt{currentgray 1 ge{/fMOP fmGG{nulldevice}{fMNg{{pop 0}}{{pop 1}}ifelse fm_su}ifelse}{[1 currentgray sub/mul cvx]cvx currentransfer fmcp fm_su}ifelse}if/fm_iget end exec FrameMacDict begin FmR end}fmPE/setgray{FrameMacDict begin fMibfMK eq{F}{fMib fMS eq fMJR 0 eq and fMJG 0 eq and fMJB 0 eq and{F}{pop 1 T}ifelse}ifelse/fMKO exch fmSG fmCN end}fmPE/setseparationgray{FrameMacDict begin/fMKO F fmSG null fmCN fm_sg end}fmPE/setrgbcolor{FrameMacDict begin 3 copy[4 1roll]fmLR{fMib fMS eq{fMJB eq exch fMJG eq and exch fMJR eq and{0 F}{1 T}ifelse}{pop pop pop 1 T}ifelse}{/fmRY fmGG exec fMib fMK eq{1.0 exch sub 4 1 roll poppop pop F}{fMib fMY eq{pop 1.0 exch sub 3 1 roll pop pop F}{fMib fMM eq{pop pop1.0 exch sub exch pop F}{fMib fMC eq{pop pop pop 1.0 exch sub F}{pop pop poppop 1 T}ifelse}ifelse}ifelse}ifelse}ifelse/fMKO exch fmSG fmCN end}fmPE/sethsbcolor{FrameMacDict begin fm_h currentrgbcolor setrgbcolor end}fmPE/currentcmykcolor where{pop}{/currentcmykcolor{FrameMacDict begincurrentrgbcolor/fmRY fmGG exec end}fmPE}ifelse/setcmykcolor{FrameMacDict beginfMib fMK eq{1.0 exch sub 4 1 roll pop pop pop dup 1.0 ge}{fMib fMY eq{pop 1.0exch sub 3 1 roll pop pop dup 1.0 ge}{fMib fMM eq{pop pop 1.0 exch sub exch popdup 1.0 ge}{fMib fMC eq{pop pop pop 1.0 exch sub dup 1.0 ge}{pop pop pop pop 1T}ifelse}ifelse}ifelse}ifelse/fMKO exch fmSG fmCN end}fmPE/setcmykoverprint{FrameMacDict begin 4 copy[5 1 roll]fmLC{fMib fMS eq{0 fmax fMJK eq exch 0 fmaxfMJY eq and exch 0 fmax fMJM eq and exch 0 fmax fMJC eq and{0 F}{1 T}ifelse}{pop pop pop pop 1 T}ifelse}{fMib fMK eq{1.0 exch sub 4 1 roll pop pop pop dup 1fmin exch 1 gt}{fMib fMY eq{pop 1.0 exch sub 3 1 roll pop pop dup 1 fmin exch 1gt}{fMib fMM eq{pop pop 1.0 exch sub exch pop dup 1 fmin exch 1 gt}{fMib fMC eq{pop pop pop 1.0 exch sub dup 1 fmin exch 1 gt}{pop pop pop pop 1 T}ifelse}ifelse}ifelse}ifelse}ifelse/fMKO exch fmSG fmCN end}fmPE/setcmykcoloroverprint{setcmykoverprint}fmPE/setcmybcolor{setcmykcolor}fmPE/FrameEr where{pop}{userdict/FrameEr(\000)put}ifelse/fMSJ 100 string def/fmXC{FmE countdictstackuserdict begin/showpage{}def/FrameDictStackDepth exch def count/FrameStackDepthexch def userdict/EndFrame5NestedPS dup FrameMacDict exch get put userdict/FrameSuccessfull false put FrameMacDict/fMHq get/$brkpage where dup{exch pop}if or{userdict/FrameEndPictStopped false put}{userdict/FrameEndPictStopped trueput currentfile cvx stopped pop FrameSuccessfull not{systemdict/clear get execuserdict/FrameEr get 0 1 put FrameMacDict begin FmG systemdict/initmatrix getexec 0 systemdict/setgray get exec clippath{pathbbox}stopped{100 100 512 692}ifexch pop add 2. div newpath moveto(Courier-BoldOblique)findfont 18 scalefontsetfont FrameEr1 fm_s( \()fm_s $error begin errorname 20 string cvs fm_s(, )fm_s/command load 128 string cvs fm_s end(\))fm_s FrameEr2 print flushFrameMacDict/fMSJ get{dup currentfile exch{readline}stopped{pop exch pop T}ifnot{exit}if(EndFrame5NestedPS)eq{exit}if}loop grestore end}if userdict/FrameSuccessfull false put userdict/FrameEndPictStopped false put FrameMacDict/fmIR get exec}ifelse}fmBi def/FmEp{save userdict/fM7 3 -1 roll put exch fMebfMCP eq fMib fMCP ne and and{fMEd{userdict 3 1 roll put}forall}if FmOP[/fMef/fMet/fMeh/fMew/fMey/fMex/fMei/fMej/fMek/fMel]{fmXD}forall fMex fMey translatefMet rotate fMew fMeh scale fMef{-1 1 scale}if 1 fMej fMel sub div 1 fMek fMeisub div scale fMej fMel add 2 div neg fMei fMek add 2 div neg translate 0setgray 0 setlinecap 1 setlinewidth 0 setlinejoin 10 setmiterlimit[]0 setdashnewpath fML1 not{F setstrokeadjust}if fmXC}FmBD/FmPI{0 setgray 0 setlinecap 1setlinewidth 0 setlinejoin 10 setmiterlimit[]0 setdash newpath newpath 0 0moveto}FmBD/FmPc{save userdict/fM7 3 -1 roll put newpath 3 index neg 3 indexneg translate 1 -1 scale 0.0 0.0 moveto fmXC}FmBD/fmIR{end countdictstackFrameDictStackDepth sub dup 0 gt{{end}repeat}{pop}ifelse count FrameStackDepthsub dup 0 gt{{pop}repeat}{pop}ifelse fM7 restore FrameMacDict begin}fmBi def/EndFrame5NestedPS{userdict/FrameEndPictStopped get{userdict/FrameSuccessfulltrue put stop}{FrameMacDict/fmIR get exec}ifelse}fmBi def/alphaimage where{pop}{userdict/alphaimage{1 ne{limitcheck}if not{limitcheck}if pop image}put}ifelse/fmDE{systemdict/initgraphics get exec clippath{pathbbox}stopped{100 100 512692}if exch pop add 2. div newpath moveto(Courier-BoldOblique)findfont 18scalefont setfont currentpoint 2 copy FrameEr3 fm_s 20 sub 2 copy movetoFrameEr4 fm_s 20 sub 2 copy moveto(\()fm_s statusdict/jobname get fm_s(\))fm_s20 sub moveto FrameEr5 fm_s showpage}FmBD/cd where{dup/cd get/fmRC fmXD/cd{FrameMacDict begin FrameEr 0 get 0 ne{fmDE}if/fmRC load end exec}fmBi put}{/endp where{dup/endp get/fMRE fmXD/endp{FrameMacDict dup dup/FmU4 get exch/fMREget exec/FmU4 exch put FrameEr 0 get 0 ne{FrameMacDict begin currentfile fMSJ{readline}stopped{pop exch pop true}if pop dup(%%Trailer)eq{pop fmDE}{cvx exec}ifelse end}if}fmBi put}if}ifelse systemdict/setpacking known{fMSP setpacking}ifend%%EndProcSet/md where{pop countdictstack array dictstack true exch{md eq{pop false exit}if}forall{md begin}if}if%FRMSetupFrameMacDict begin/FrameEr1(PostScript error)def/FrameEr2(A PostScript error occurred. FrameMaker is attempting recovery.)def/FrameEr3(FrameMaker has detected one or more)def/FrameEr4(PostScript errors in this document.)def/FrameEr5(Please check your output.)def/FrameFillPatternsArray [  0   0.1   0.3   0.5   0.7   0.9   0.97   1   <0F1E3C78F0E1C387>  <0F87C3E1F0783C1E>  <CCCCCCCCCCCCCCCC>  <FFFF0000FFFF0000>  <8142241818244281>  <0102040810204080>  <8040201008040201>] def%%BoundingBox: 0 0 612 792%%DocumentProcessColors: Cyan Magenta Yellow Black%%DocumentCustomColors: (Red)%%+ (Green)%%+ (Blue)%%CMYKCustomColor: 0 1 1 0 (Red)%%+ 1 0 1 0 (Green)%%+ 1 1 0 0 (Blue)end%FRMEndSetup%%EndSetup%%Page: 1 1%%BeginPageSetup%RBIIncludePageSlotInvocationmTSsetuppmSVsetupinitializepage(; page: 1 of 6)setjob%%EndPageSetupgS 0 0 552 728 rC0 0 :MFrMacBegin0 FmPF FmOP%FRMPage: 1 10 FmSP%%PageProcessColors: Black%%PageCustomColors: %FRMEndPageSetupfalse FmCBFmE0 0 :Mf67 sf( )S3 0 :MFrMacBeginB0 FmPF FmOP111.903 50.333 M 0.084(Users Manual for)W-0.253 N 0.084( CSU Geodesic Shallow-W)W-0.772 N (ater)S-0.253 N 0.084( Model)W171.964 67.333 M (doe_ca/swm/doc/users_manual.pdf)S233.805 84.333 M (April 12, 2004)S42 143.333 M (1. Obtaining the SWM)SFmE4 0 :Mf98 sf( )S7 0 :MFrMacBeginB0 FmPF FmOP79.376 164 M -0.059(The SWM is one component of a complete coupled system model. )W-0.217 N (T)S-0.838 N -0.059(o obtain the full shal-)W42 178 M -0.207(low-water model \()WFmE7 0 :Mf132 sf( )S10 0 :MFrMacBeginB0 FmPF FmOP130.221 178 M (swm_csu.tar)SFmE10 0 :Mf98 sf( )S13 0 :MFrMacBeginB0 FmPF FmOP190.561 178 M -0.207(\), contact Kelley )W-0.217 N (W)S-0.48 N -0.207(ittmeyer \()WFmE13 0 :Mf132 sf( )S16 0 :MFrMacBeginB0 FmPF FmOP329.971 178 M (kelley@atmos.colostate.edu)SFmE16 0 :Mf98 sf( )S19 0 :MFrMacBeginB0 FmPF FmOP464.303 178 M -0.207(\) and ask )W42 192 M (her for the username, password, and website to download the )SFmE19 0 :Mf132 sf( )S22 0 :MFrMacBeginB0 FmPF FmOP338.584 192 M (swm_csu.tar)SFmE22 0 :Mf98 sf( )S25 0 :MFrMacBeginB0 FmPF FmOP398.924 192 M ( file. )S79.376 220 M (Point your browser to that website, login, and download the )SFmE25 0 :Mf132 sf( )S28 0 :MFrMacBeginB0 FmPF FmOP369.333 220 M (swm_csu.tar)SFmE28 0 :Mf98 sf( )S31 0 :MFrMacBeginB0 FmPF FmOP429.673 220 M ( file. On your )S42 234 M -0.468(local machine, make a directory called )WFmE31 0 :Mf132 sf( )S34 0 :MFrMacBeginB0 FmPF FmOP227.432 234 M (doe_ca)SFmE34 0 :Mf98 sf( )S37 0 :MFrMacBeginB0 FmPF FmOP262.085 234 M -0.468(, extract the tar file \()WFmE37 0 :Mf132 sf( )S40 0 :MFrMacBeginB0 FmPF FmOP357.692 234 M -0.468(tar -xvf swm_csu.tar)WFmE40 0 :Mf98 sf( )S43 0 :MFrMacBeginB0 FmPF FmOP455.083 234 M -0.468(\) inside the )WFmE43 0 :Mf132 sf( )S46 0 :MFrMacBeginB0 FmPF FmOP42 248 M (doe_ca)SFmE46 0 :Mf98 sf( )S49 0 :MFrMacBeginB0 FmPF FmOP76.652 248 M ( directory)S-0.779 N (. Under )SFmE49 0 :Mf132 sf( )S52 0 :MFrMacBeginB0 FmPF FmOP161.174 248 M (doe_ca)SFmE52 0 :Mf98 sf( )S55 0 :MFrMacBeginB0 FmPF FmOP195.826 248 M ( there will be four directories: )SFmE55 0 :Mf132 sf( )S58 0 :MFrMacBeginB0 FmPF FmOP341.771 248 M (utilities)SFmE58 0 :Mf98 sf( )S61 0 :MFrMacBeginB0 FmPF FmOP377.771 248 M (, )SFmE61 0 :Mf132 sf( )S64 0 :MFrMacBeginB0 FmPF FmOP383.771 248 M (esmf, lib)SFmE64 0 :Mf98 sf( )S67 0 :MFrMacBeginB0 FmPF FmOP424.436 248 M (, and )SFmE67 0 :Mf132 sf( )S70 0 :MFrMacBeginB0 FmPF FmOP450.762 248 M (swm)SFmE70 0 :Mf98 sf( )S73 0 :MFrMacBeginB0 FmPF FmOP472.102 248 M (. )S-0.217 N (The )S42 262 M -0.032(path in the build system assumes the top-level directory is )WFmE73 0 :Mf132 sf( )S76 0 :MFrMacBeginB0 FmPF FmOP322.963 262 M (doe_ca)SFmE76 0 :Mf98 sf( )S79 0 :MFrMacBeginB0 FmPF FmOP357.616 262 M -0.032( so it is important to extract the)WFmE79 0 :Mf132 sf( )S82 0 :MFrMacBeginB0 FmPF FmOP507.031 262 M -0.032( )W42 276 M (swm_csu.tar )SFmE82 0 :Mf98 sf( )S85 0 :MFrMacBeginB0 FmPF FmOP105.34 276 M (directly under)SFmE85 0 :Mf132 sf( )S88 0 :MFrMacBeginB0 FmPF FmOP172.313 276 M ( doe_ca.)SFmE88 0 :Mf67 sf( )S91 0 :MFrMacBeginB0 FmPF FmOP42 333.333 M (2. Compiling the SWM)SFmE91 0 :Mf145 sf( )S94 0 :MFrMacBeginB0 FmPF FmOP42 360 M (a. )S-0.217 N (The build)SFmE94 0 :Mf98 sf( )S97 0 :MFrMacBeginB0 FmPF FmOP79.376 377 M (Go to )SFmE97 0 :Mf132 sf( )S100 0 :MFrMacBeginB0 FmPF FmOP109.376 377 M (utilities/compile)SFmE100 0 :Mf98 sf( )S103 0 :MFrMacBeginB0 FmPF FmOP186.696 377 M ( and type \322)SFmE103 0 :Mf132 sf( )S106 0 :MFrMacBeginB0 FmPF FmOP239.009 377 M (make DEBUG=true)SFmE106 0 :Mf98 sf( )S109 0 :MFrMacBeginB0 FmPF FmOP335.413 377 M (\323. )S-0.217 N (This should produce a file )SFmE109 0 :Mf132 sf( )S112 0 :MFrMacBeginB0 FmPF FmOP474.825 377 M (utili-)S42 391 M (ties.lib)SFmE112 0 :Mf98 sf( )S115 0 :MFrMacBeginB0 FmPF FmOP74.332 391 M ( in the )SFmE115 0 :Mf132 sf( )S118 0 :MFrMacBeginB0 FmPF FmOP107.326 391 M (doe_ca/lib)SFmE118 0 :Mf98 sf( )S121 0 :MFrMacBeginB0 FmPF FmOP157.98 391 M ( directory)S-0.779 N (. Following the utilities build, go )SFmE121 0 :Mf132 sf( )S124 0 :MFrMacBeginB0 FmPF FmOP364.184 391 M (swm/compile)SFmE124 0 :Mf98 sf( )S127 0 :MFrMacBeginB0 FmPF FmOP426.844 391 M ( and type \322)SFmE127 0 :Mf132 sf( )S130 0 :MFrMacBeginB0 FmPF FmOP479.156 391 M (make )S42 405 M (DEBUG=true)SFmE130 0 :Mf98 sf( )S133 0 :MFrMacBeginB0 FmPF FmOP110.086 405 M (\323. )S-0.217 N (This build will compile the SWM source code, link to the )SFmE133 0 :Mf132 sf( )S136 0 :MFrMacBeginB0 FmPF FmOP400.482 405 M (lib/utilities.a)SFmE136 0 :Mf98 sf( )S139 0 :MFrMacBeginB0 FmPF FmOP461.484 405 M ( file, and )S42 419 M (link to system level library files. )S-0.217 N (The result of the build is the creation of an executable called )S42 433 M (\322)SFmE139 0 :Mf132 sf( )S142 0 :MFrMacBeginB0 FmPF FmOP47.326 433 M (swm)SFmE142 0 :Mf98 sf( )S145 0 :MFrMacBeginB0 FmPF FmOP68.666 433 M (\323 that resides in the local )SFmE145 0 :Mf132 sf( )S148 0 :MFrMacBeginB0 FmPF FmOP190.623 433 M (swm/compile)SFmE148 0 :Mf98 sf( )S151 0 :MFrMacBeginB0 FmPF FmOP253.283 433 M ( directory)S-0.779 N (. In this case, the swm executable is com-)S42 447 M (piled in debug mode. If the user wishes to recompile the model with a higher optimization, both )S42 461 M (the utilities and swm compile directories should be cleaned \(with \322)SFmE151 0 :Mf132 sf( )S154 0 :MFrMacBeginB0 FmPF FmOP362.578 461 M (make clobber)SFmE154 0 :Mf98 sf( )S157 0 :MFrMacBeginB0 FmPF FmOP427.553 461 M (\323\) and recom-)S42 475 M (piled with \322)SFmE157 0 :Mf132 sf( )S160 0 :MFrMacBeginB0 FmPF FmOP98.654 475 M (make)SFmE160 0 :Mf98 sf( )S163 0 :MFrMacBeginB0 FmPF FmOP123.973 475 M (\323.)SFmE163 0 :Mf145 sf( )S166 0 :MFrMacBeginB0 FmPF FmOP42 515 M (b. Compilation dir)S-0.217 N (ectives)SFmE166 0 :Mf98 sf( )S169 0 :MFrMacBeginB0 FmPF FmOP79.376 532 M (Compilation directives are included in )SFmE169 0 :Mf132 sf( )S172 0 :MFrMacBeginB0 FmPF FmOP266.325 532 M (utilities/Makefile.library)SFmE172 0 :Mf98 sf( )S175 0 :MFrMacBeginB0 FmPF FmOP383.97 532 M ( for the utilities build and )SFmE175 0 :Mf132 sf( )S178 0 :MFrMacBeginB0 FmPF FmOP42 546 M (swm/compile/Makefile.model)SFmE178 0 :Mf98 sf( )S181 0 :MFrMacBeginB0 FmPF FmOP182.297 546 M ( for the swm build. )S42 574 M (For a full description of the utilities software see the following document: \(Don Dazlich\). )S-0.217 N (The )S42 588 M (utilities build includes the following directives that the user may wish to alter:)SFmE181 0 :Mf132 sf( )S184 0 :MFrMacBeginB0 FmPF FmOP61.375 616 M (DMPI            = -Dmpi=0)S61.375 630 M (DP)S-1.547 N (ARALLEL_IO    = -Dparallel_io=0)S42 658 M (DMPI)SFmE184 0 :Mf98 sf( )S187 0 :MFrMacBeginB0 FmPF FmOP71.988 658 M -0.45( controls whether message passing is enabled in the utilities library)W-0.779 N -0.45(. )W-0.217 N -0.45(The default for )WFmE187 0 :Mf132 sf( )S190 0 :MFrMacBeginB0 FmPF FmOP466.909 658 M (DMPI)SFmE190 0 :Mf98 sf( )S193 0 :MFrMacBeginB0 FmPF FmOP496.897 658 M -0.45( is )WFmE193 0 :Mf132 sf( )S196 0 :MFrMacBeginB0 FmPF FmOP42 672 M (0)SFmE196 0 :Mf98 sf( )S199 0 :MFrMacBeginB0 FmPF FmOP48 672 M ( \(false\) for a single-processor library)S-0.779 N (. )SFmE199 0 :Mf132 sf( )S202 0 :MFrMacBeginB0 FmPF FmOP228.814 672 M (DP)S-1.547 N (ARALLEL_IO)SFmE202 0 :Mf98 sf( )S205 0 :MFrMacBeginB0 FmPF FmOP311.268 672 M ( controls whether I/O is done in serial )SFmEendpshowpage%%PageTrailer%%Page: 2 2%%BeginPageSetup%RBIIncludePageSlotInvocationmTSsetuppmSVsetupinitializepage(; page: 2 of 6)setjob%%EndPageSetupgS 0 0 552 728 rC205 0 :MFrMacBegin0 FmPF FmOP%FRMPage: 2 20 FmSP%%PageProcessColors: Black%%PageCustomColors: %FRMEndPageSetupfalse FmCBFmE205 0 :Mf98 sf( )S208 0 :MFrMacBeginB0 FmPF FmOP42 49 M (\(single processor\) mode or in parallel model. )S-0.217 N (W)S-0.961 N (e suggest that users leave the default setting of )SFmE208 0 :Mf132 sf( )S211 0 :MFrMacBeginB0 FmPF FmOP497.016 49 M (0)SFmE211 0 :Mf98 sf( )S214 0 :MFrMacBeginB0 FmPF FmOP503.016 49 M ( )S42 63 M (\(false\) in place. Note that once the utilities library is built, it does not have to be re-compiled )S42 77 M -0.199(unless the user wish to change the compile directives, change the level of optimization, or change )W42 91 M (the source code.)S42 119 M (The swm build includes the following directives that the user may wish to alter:)SFmE214 0 :Mf132 sf( )S217 0 :MFrMacBeginB0 FmPF FmOP58.25 147 M (RESOLUTION     = 0002562)S58.25 161 M (DNUMSBDMNS      = -Dnumsbdmns00010)S58.25 175 M (DNPE            = -DNPE_COMP=1)S58.25 189 M (DMPI            = -Dmpi=0)S58.25 203 M (DP)S-1.547 N (ARALLEL_IO    = -Dparallel_io=0)S58.25 217 M (DVISCOSITY      = -Dviscosity=0)S42 245 M (DVISCOSITY)SFmE217 0 :Mf98 sf( )S220 0 :MFrMacBeginB0 FmPF FmOP107.561 245 M -0.041( controls whether a del4 dif)W-0.217 N -0.041(fusion is applied to the momentum equation with a coef-)W42 259 M (ficient set in the call to )SFmE220 0 :Mf132 sf( )S223 0 :MFrMacBeginB0 FmPF FmOP154.629 259 M (dissipation)SFmE223 0 :Mf98 sf( )S226 0 :MFrMacBeginB0 FmPF FmOP207.305 259 M ( from )SFmE226 0 :Mf132 sf( )S229 0 :MFrMacBeginB0 FmPF FmOP236.631 259 M (swm/sour)S-0.445 N (ce/driver)S-1.33 N (.F)SFmE229 0 :Mf98 sf( )S232 0 :MFrMacBeginB0 FmPF FmOP333.551 259 M (. )S-0.217 N (The default is )SFmE232 0 :Mf132 sf( )S235 0 :MFrMacBeginB0 FmPF FmOP408.311 259 M (0)SFmE235 0 :Mf98 sf( )S238 0 :MFrMacBeginB0 FmPF FmOP414.311 259 M ( \(false\). )S-0.217 N (The )SFmE238 0 :Mf132 sf( )S241 0 :MFrMacBeginB0 FmPF FmOP475.395 259 M (DMPI)SFmE241 0 :Mf98 sf( )S244 0 :MFrMacBeginB0 FmPF FmOP505.383 259 M ( )S42 273 M (and )SFmE244 0 :Mf132 sf( )S247 0 :MFrMacBeginB0 FmPF FmOP62.326 273 M (DP)S-1.547 N (ARALLEL_IO)SFmE247 0 :Mf98 sf( )S250 0 :MFrMacBeginB0 FmPF FmOP144.779 273 M ( have the same meanings as in the utilities build and )SFmE250 0 :Mf145 sf( )S253 0 :MFrMacBeginB0 FmPF FmOP397.723 273 M (MUST)SFmE253 0 :Mf98 sf( )S256 0 :MFrMacBeginB0 FmPF FmOP432.176 273 M ( be set to the )S42 287 M (same values as used in the utilities build. In addition, the user specifies the model resolution )SFmE256 0 :Mf132 sf( )S259 0 :MFrMacBeginB0 FmPF FmOP42 301 M (\(RESOLUTION)SFmE259 0 :Mf98 sf( )S262 0 :MFrMacBeginB0 FmPF FmOP118.002 301 M -0.024(\) as )WFmE262 0 :Mf132 sf( )S265 0 :MFrMacBeginB0 FmPF FmOP137.945 301 M (0002562)SFmE265 0 :Mf98 sf( )S268 0 :MFrMacBeginB0 FmPF FmOP179.945 301 M -0.024(, )WFmE268 0 :Mf132 sf( )S271 0 :MFrMacBeginB0 FmPF FmOP185.921 301 M (0010242)SFmE271 0 :Mf98 sf( )S274 0 :MFrMacBeginB0 FmPF FmOP227.921 301 M -0.024(, )WFmE274 0 :Mf132 sf( )S277 0 :MFrMacBeginB0 FmPF FmOP233.896 301 M (0040962)SFmE277 0 :Mf98 sf( )S280 0 :MFrMacBeginB0 FmPF FmOP275.896 301 M -0.024(, or )WFmE280 0 :Mf132 sf( )S283 0 :MFrMacBeginB0 FmPF FmOP294.844 301 M (0163842)SFmE283 0 :Mf98 sf( )S286 0 :MFrMacBeginB0 FmPF FmOP336.844 301 M -0.024(. Other resolutions, both higher and )W42 315 M (lower)S-0.48 N -0.274(, are available, but the repository only includes startup files for these resolutions. If )WFmE286 0 :Mf132 sf( )S289 0 :MFrMacBeginB0 FmPF FmOP466.556 315 M (DMPI)SFmE289 0 :Mf98 sf( )S292 0 :MFrMacBeginB0 FmPF FmOP496.545 315 M -0.274( is )W42 329 M (set to 0, then )SFmE292 0 :Mf132 sf( )S295 0 :MFrMacBeginB0 FmPF FmOP106.324 329 M (DNUMSBDMNS)SFmE295 0 :Mf98 sf( )S298 0 :MFrMacBeginB0 FmPF FmOP187.652 329 M ( must be set to )SFmE298 0 :Mf132 sf( )S301 0 :MFrMacBeginB0 FmPF FmOP259.98 329 M (00010)SFmE301 0 :Mf98 sf( )S304 0 :MFrMacBeginB0 FmPF FmOP289.98 329 M ( and )SFmE304 0 :Mf132 sf( )S307 0 :MFrMacBeginB0 FmPF FmOP313.307 329 M (DNPE)SFmE307 0 :Mf98 sf( )S310 0 :MFrMacBeginB0 FmPF FmOP344.637 329 M ( set to )SFmE310 0 :Mf132 sf( )S313 0 :MFrMacBeginB0 FmPF FmOP376.301 329 M (1)SFmE313 0 :Mf98 sf( )S316 0 :MFrMacBeginB0 FmPF FmOP382.301 329 M (; this states that the single )S42 343 M (cpu executable will run on one processor and the global grid will be composed into 10 subdo-)S42 357 M (mains. If )SFmE316 0 :Mf132 sf( )S319 0 :MFrMacBeginB0 FmPF FmOP87.656 357 M (DMPI)SFmE319 0 :Mf98 sf( )S322 0 :MFrMacBeginB0 FmPF FmOP117.645 357 M ( is set to one \(in both the utilities build and the swm build\), then )SFmE322 0 :Mf132 sf( )S325 0 :MFrMacBeginB0 FmPF FmOP427.611 357 M (DNPE)SFmE325 0 :Mf98 sf( )S328 0 :MFrMacBeginB0 FmPF FmOP458.941 357 M ( states the )S42 371 M (number of processors that will be used and )SFmE328 0 :Mf132 sf( )S331 0 :MFrMacBeginB0 FmPF FmOP250.617 371 M (DNUMSBDMNS)SFmE331 0 :Mf98 sf( )S334 0 :MFrMacBeginB0 FmPF FmOP331.945 371 M ( states the total number of subdo-)S42 385 M -0.224(mains used to decompose the global grid. Below is a sample of valid )WFmE334 0 :Mf132 sf( )S337 0 :MFrMacBeginB0 FmPF FmOP371.688 385 M (DNPE)SFmE337 0 :Mf98 sf( )S340 0 :MFrMacBeginB0 FmPF FmOP403.018 385 M -0.224( and )WFmE340 0 :Mf132 sf( )S343 0 :MFrMacBeginB0 FmPF FmOP425.896 385 M (DNUMSBDMNS)SFmE343 0 :Mf98 sf( )S346 0 :MFrMacBeginB0 FmPF FmOP507.224 385 M -0.224( )W42 399 M (combinations:)SFmE346 0 :Mf132 sf( )S349 0 :MFrMacBeginB0 FmPF FmOP79.376 427 M (DNPE_COMP=2)S94.577 N (Dnumsbdmns00010)S79.376 441 M (DNPE_COMP=4)S94.577 N (Dnumsbdmns00040)S79.376 455 M (DNPE_COMP=4)S94.577 N (Dnumsbdmns00160)S79.376 469 M (DNPE_COMP=8)S94.577 N (Dnumsbdmns00040)S79.376 483 M (DNPE_COMP=16)S88.577 N (Dnumsbdmns00160)S79.376 497 M (DNPE_COMP=32)S88.577 N (Dnumsbdmns00160)SFmE349 0 :Mf98 sf( )S352 0 :MFrMacBeginB0 FmPF FmOP42 525 M (Many other valid combinations exist. )S-0.217 N (The requirement is that the number of subdomains be )S98.863 545.499 M -0.163( where )W9 N -0.163( starts at 0 and the number of processors must divide evenly into the number )W42 560.499 M (of subdomains. In general, users should choose the lowest number of subdomains possible for a )S42 574.499 M (given number of processors.)SFmE352 0 :Mf145 sf( )S355 0 :MFrMacBeginB0 FmPF FmOP42 614.499 M (c. )S-0.217 N (T)S-0.891 N (r)S-0.217 N (ouble shooting)SFmE355 0 :Mf98 sf( )S358 0 :MFrMacBeginB0 FmPF FmOP42 645.499 M (1. )S-0.217 N (The make system for the SWM is set up to automatically detect the following architectures: )S42 659.499 M -0.407(IBM SP)W-1.33 N -0.407(, SGI, and Macintosh \(Absoft\). If you are building the SWM on one of these architectures, )W42 673.499 M (you will hopefully not have to alter the make system. If you are building the SWM on another )SFmE42 531 57 20 rC358 0 :M( )S361 0 :MFrMacBegin42 531 56.863 19.499 FmKpB0 FmPF FmOP47.848 545.499 M (10)SFmE361 0 :Mf179 sf( )S364 0 :MFrMacBegin42 531 56.863 19.499 FmKpB0 FmPF FmOP43 545.499 M 13.703(\(\))AFmE364 0 :Mf98 sf( )S367 0 :MFrMacBegin42 531 56.863 19.499 FmKpB0 FmPF FmOP81.059 545.499 M (4)SFmE367 0 :Mf179 sf( )S370 0 :MFrMacBegin42 531 56.863 19.499 FmKpB0 FmPF FmOP76.212 545.499 M 7.703(\(\))A-31.916 N (\267)SFmE370 0 :Mf192 sf( )S372 0 :MFrMacBegin42 531 56.863 19.499 FmKpB0 FmPF FmOP92.363 538.75 M (n)SFmEgRgS 133 535 10 16 rC372 0 :Mf132 sf( )S375 0 :MFrMacBegin133.852 535.499 9 15 FmKpB0 FmPF FmOP134.852 545.499 M (n)SFmEendpshowpage%%PageTrailer%%Page: 3 3%%BeginPageSetup%RBIIncludePageSlotInvocationmTSsetuppmSVsetupinitializepage(; page: 3 of 6)setjob%%EndPageSetupgS 0 0 552 728 rC375 0 :MFrMacBegin0 FmPF FmOP%FRMPage: 3 30 FmSP%%PageProcessColors: Black%%PageCustomColors: %FRMEndPageSetupfalse FmCBFmE375 0 :Mf98 sf( )S378 0 :MFrMacBeginB0 FmPF FmOP42 49 M -0.105(system, you will have to edit the )WFmE378 0 :Mf132 sf( )S381 0 :MFrMacBeginB0 FmPF FmOP199.907 49 M (Makefile.host)SFmE381 0 :Mf98 sf( )S384 0 :MFrMacBeginB0 FmPF FmOP264.887 49 M -0.105( files in )WFmE384 0 :Mf132 sf( )S387 0 :MFrMacBeginB0 FmPF FmOP303.566 49 M (utilities/compile)SFmE387 0 :Mf98 sf( )S390 0 :MFrMacBeginB0 FmPF FmOP380.886 49 M -0.105( and )WFmE390 0 :Mf132 sf( )S393 0 :MFrMacBeginB0 FmPF FmOP404.002 49 M (swm/compile)SFmE393 0 :Mf98 sf( )S396 0 :MFrMacBeginB0 FmPF FmOP466.663 49 M -0.105( and add )W42 63 M (your system to the list of supported architectures.)S42 91 M -0.077(2. On SGI machines the build system works best using gmake. Using \322)WFmE396 0 :Mf132 sf( )S399 0 :MFrMacBeginB0 FmPF FmOP381.706 91 M (gmake)SFmE399 0 :Mf98 sf( )S402 0 :MFrMacBeginB0 FmPF FmOP413.024 91 M -0.077(\323 instead of \322)WFmE402 0 :Mf132 sf( )S405 0 :MFrMacBeginB0 FmPF FmOP476.432 91 M (make)SFmE405 0 :Mf98 sf( )S408 0 :MFrMacBeginB0 FmPF FmOP501.751 91 M -0.077(\323 )W42 105 M (can fix most build problems on SGI machines.)S42 133 M (3. )S-0.217 N (The SWM requires several system level libraries. )S-0.217 N (These include netCDF and MPI. If your sys-)S42 147 M (tem has these libraries, but you are getting errors at the end of compilation due to \322files not )S42 161 M -0.017(found,\323 you will have to alter the )WFmE408 0 :Mf132 sf( )S411 0 :MFrMacBeginB0 FmPF FmOP203.835 161 M (Makefile.host)SFmE411 0 :Mf98 sf( )S414 0 :MFrMacBeginB0 FmPF FmOP268.815 161 M -0.017( files and correct the path to these libraries. )W-0.217 N -0.017(These )W42 175 M (will be modified in the)SFmE414 0 :Mf132 sf( )S417 0 :MFrMacBeginB0 FmPF FmOP151.313 175 M ( LDLIBS)SFmE417 0 :Mf98 sf( )S420 0 :MFrMacBeginB0 FmPF FmOP193.652 175 M ( line for the architecture you are using.)SFmE420 0 :Mf67 sf( )S423 0 :MFrMacBeginB0 FmPF FmOP42 232.333 M (3. Running the SWM)SFmE424 0 :Mf98 sf( )S427 0 :MFrMacBeginB0 FmPF FmOP79.376 253 M (At this point an executable has been created and the user has moved that executable into )S42 267 M (the correct run directory)S-0.779 N (. For example, a swm built at a resolution of 2562 should be moved into )S42 281 M (the run.0002562 directory)S-0.779 N (. )S-0.217 N (The following run-time variables can be set by the user in )SFmE427 0 :Mf132 sf( )S430 0 :MFrMacBeginB0 FmPF FmOP452.221 281 M (run.*/data/)S42 295 M (namelist)SFmE430 0 :Mf98 sf( )S433 0 :MFrMacBeginB0 FmPF FmOP82.664 295 M (:)SFmE433 0 :Mf132 sf( )S436 0 :MFrMacBeginB0 FmPF FmOP77.625 323 M (0001.00   ! tau_end_day: the number of days to integrate forwar)S-0.445 N (d)S77.625 337 M (002.00     ! tau_end_hour: the number of hours to integrate forwar)S-0.445 N (d)S77.625 351 M (0100.00   ! dt \(seconds\): the time step)S77.625 365 M (F              ! l_r)S-0.445 N (estart: start fr)S-0.445 N (om a r)S-0.445 N (estart \(use only false at this time\))S77.625 379 M (0864        ! n_r)S-0.445 N (estart: write r)S-0.445 N (estarts every n_r)S-0.445 N (estart steps)S77.625 393 M (0036        ! n_output: write output every n_output steps)S77.625 407 M (0036        ! n_diagnostics: write diagnostics to std_out every n_diagnostics steps)SFmE436 0 :Mf98 sf( )S439 0 :MFrMacBeginB0 FmPF FmOP42 435 M -0.364(Once these parameters are specified, the user launches the executable. If the system was compiled )W42 449 M (with )SFmE439 0 :Mf132 sf( )S442 0 :MFrMacBeginB0 FmPF FmOP66.334 449 M (-Dmpi=0)SFmE442 0 :Mf98 sf( )S445 0 :MFrMacBeginB0 FmPF FmOP111.094 449 M (, use \322)SFmE445 0 :Mf132 sf( )S448 0 :MFrMacBeginB0 FmPF FmOP141.416 449 M (swm > log)SFmE448 0 :Mf98 sf( )S451 0 :MFrMacBeginB0 FmPF FmOP192.188 449 M (\323. If the system was compiled with )SFmE451 0 :Mf132 sf( )S454 0 :MFrMacBeginB0 FmPF FmOP362.15 449 M (-Dmpi=1)SFmE454 0 :Mf98 sf( )S457 0 :MFrMacBeginB0 FmPF FmOP406.91 449 M ( use \322)SFmE457 0 :Mf132 sf( )S460 0 :MFrMacBeginB0 FmPF FmOP434.232 449 M (mpirun -np ? )S42 463 M (swm > log)SFmE460 0 :Mf98 sf( )S463 0 :MFrMacBeginB0 FmPF FmOP92.771 463 M ( where \322)SFmE463 0 :Mf132 sf( )S466 0 :MFrMacBeginB0 FmPF FmOP133.412 463 M (?)SFmE466 0 :Mf98 sf( )S469 0 :MFrMacBeginB0 FmPF FmOP139.412 463 M (\323 matches the value of )SFmE469 0 :Mf132 sf( )S472 0 :MFrMacBeginB0 FmPF FmOP249.697 463 M (NPE)SFmE472 0 :Mf98 sf( )S475 0 :MFrMacBeginB0 FmPF FmOP272.361 463 M ( used in )SFmE475 0 :Mf132 sf( )S478 0 :MFrMacBeginB0 FmPF FmOP312.691 463 M (swm/compile/Makefile.model)SFmE478 0 :Mf98 sf( )S481 0 :MFrMacBeginB0 FmPF FmOP452.988 463 M (.)S79.376 491 M (The model is set up for shallow-water model test case #5 which includes a 2 km conical )S42 505 M (mountain inserted into a geostrophically-balanced zonal flow at t=0. )S-0.217 N (The simulation is character)S-0.24 N (-)S42 519 M (ized by the excitation of gravity waves and Rossby waves with a reasonable degree of nonlinear)S-0.24 N (-)S42 533 M (ity occurring in the vicinity of the mountain. )S-0.217 N (The initial conditions are specified in )SFmE481 0 :Mf132 sf( )S484 0 :MFrMacBeginB0 FmPF FmOP440.016 533 M (swm/sour)S-0.445 N (ce/)S42 547 M (initialize.F)SFmE484 0 :Mf98 sf( )S487 0 :MFrMacBeginB0 FmPF FmOP93.369 547 M (. High resolution spectral solutions that serve as a control reference solution are avail-)S42 561 M (able on request.)SFmE487 0 :Mf67 sf( )S490 0 :MFrMacBeginB0 FmPF FmOP42 604.333 M (4. )S-0.253 N (V)S-0.52 N (isualizing SWM r)S-0.253 N (esults)SFmE490 0 :Mf98 sf( )S493 0 :MFrMacBeginB0 FmPF FmOP42 625 M (T)S-0.838 N (wo types of output are written. One form of output is written to )SFmE493 0 :Mf132 sf( )S496 0 :MFrMacBeginB0 FmPF FmOP355.102 625 M (run.*/dx/output)SFmE496 0 :Mf98 sf( )S499 0 :MFrMacBeginB0 FmPF FmOP429.434 625 M (. )S-0.217 N (This output is )S42 639 M (visualized with OpenDX and only users familiar with OpenDX should work with this data. )S-0.217 N (The )S42 653 M (other data is written to )SFmE499 0 :Mf132 sf( )S502 0 :MFrMacBeginB0 FmPF FmOP152.971 653 M (qp_output)SFmE502 0 :Mf98 sf( )S505 0 :MFrMacBeginB0 FmPF FmOP201.639 653 M ( in netCDF format. )S-0.217 N (This data is readily viewable with IDL)S-0.445 N ( com-)S42 667 M (bined with the \(free\) CSU visualization package EZPLOT)S-0.891 N (. If you have IDL, contact Kelley )S-0.217 N (W)S-0.48 N (itt-)S42 681 M -0.139(meyer for a copy of EZPLOT)W-0.891 N -0.139(. )W-0.217 N (T)S-0.838 N -0.139(o use EZPLOT)W-0.217 N -0.139( do the following: start IDL, type EZPLOT)W-0.891 N -0.139(, on the )WFmEendpshowpage%%PageTrailer%%Page: 4 4%%BeginPageSetup%RBIIncludePageSlotInvocationmTSsetuppmSVsetupinitializepage(; page: 4 of 6)setjob%%EndPageSetupgS 0 0 552 728 rC505 0 :MFrMacBegin0 FmPF FmOP%FRMPage: 4 40 FmSP%%PageProcessColors: Black%%PageCustomColors: %FRMEndPageSetupfalse FmCBFmE505 0 :Mf98 sf( )S508 0 :MFrMacBeginB0 FmPF FmOP42 49 M (EZPLOT)S-0.217 N ( GUI click \322CSU GCM Data\323 and choose \322GeoDesic File\323 and open any file in )SFmE508 0 :Mf132 sf( )S511 0 :MFrMacBeginB0 FmPF FmOP470.666 49 M (run.*/)S42 63 M (qp_output)SFmE511 0 :Mf98 sf( )S514 0 :MFrMacBeginB0 FmPF FmOP90.668 63 M (. EZPLOT)S-0.217 N ( will read in the data for all points at all time levels and provide a point-and-)S42 77 M (click GUI to visualize the data. )S42 105 M (The netCDF files are self-describing; the entire grid information is contained in the files. )S-0.662 N (A)S-0.662 N ( )S42 119 M (\322)SFmE514 0 :Mf132 sf( )S517 0 :MFrMacBeginB0 FmPF FmOP47.326 119 M (ncdump)SFmE517 0 :Mf98 sf( )S520 0 :MFrMacBeginB0 FmPF FmOP85.318 119 M -0.041(\323 of a typical files yields the header information listed in )W-0.662 N -0.041(Appendix )W-0.662 N -0.041(A. )W-0.217 N -0.041(The vector listing )W42 133 M (of )SFmE520 0 :Mf132 sf( )S523 0 :MFrMacBeginB0 FmPF FmOP54.996 133 M (grid_center_{lat,lon})SFmE523 0 :Mf98 sf( )S526 0 :MFrMacBeginB0 FmPF FmOP157.582 133 M ( and )SFmE526 0 :Mf132 sf( )S529 0 :MFrMacBeginB0 FmPF FmOP180.908 133 M (grid_corner_{lat,lon})SFmE529 0 :Mf98 sf( )S532 0 :MFrMacBeginB0 FmPF FmOP285.504 133 M ( provides a complete description of the grid. )S42 147 M (There is a one-to-one correspondence between a grid center and the variable data. )S-0.217 N (These netCDF )S42 161 M (files should be viewable using many of the currently available graphics packages.)SFmE532 0 :Mf67 sf( )S535 0 :MFrMacBeginB0 FmPF FmOP111.702 246.333 M 0.146(Appendix )W-0.772 N 0.146(A: netCDF)W-0.52 N 0.146( header)W-0.253 N 0.146( information for)W-0.253 N 0.146( the SWM)WFmE536 0 :Mf98 sf( )S539 0 :MFrMacBeginB0 FmPF FmOP42 281 M (netcdf hswm_d000000p000.g2 {)S42 295 M (dimensions:)S42 309 M (        time = UNLIMITED; // \(26 currently\))S42 323 M (        char_len = 10;)S42 337 M (        grid_cells = 2562 ;)S42 351 M (        grid_size = 2562 ;)S42 365 M (        grid_corners = 6 ;)S42 379 M (        grid_rank = 1 ;)S42 407 M (variables:)S42 421 M (        double time\(time\) ;)S42 435 M (                time:quantity = \"time\" ;)S42 449 M (                time:units = \"days since 1-1-1\" ;)S42 463 M (                time:calendar = \"noleap\" ;)S42 477 M (        char char_time\(time, char_len\) ;)S42 491 M (                char_time:format = \"mm/dd/yyyy\" ;)S42 505 M (        double start_period\(time\) ;)S42 519 M (                start_period:long_name = \"start of averaged period\" ;)S42 533 M (                start_period:units = \"days since 1-1-1\" ;)S42 547 M (        double end_period\(time\) ;)S42 561 M (                end_period:long_name = \"end of averaged period\" ;)S42 575 M (                end_period:units = \"days since 1-1-1\" ;)S42 589 M (        double period_length\(time\) ;)S42 603 M (                period_length:long_name = \"length of averaged period\" ;)S42 617 M (                period_length:units = \"days\" ;)S42 631 M (        double grid_center_lat\(grid_cells\) ;)S42 645 M (                grid_center_lat:units = \"radians\" ;)S42 659 M (        double grid_center_lon\(grid_cells\) ;)S42 673 M (                grid_center_lon:units = \"radians\" ;)SFmEendpshowpage%%PageTrailer%%Page: 5 5%%BeginPageSetup%RBIIncludePageSlotInvocationmTSsetuppmSVsetupinitializepage(; page: 5 of 6)setjob%%EndPageSetupgS 0 0 552 728 rC539 0 :MFrMacBegin0 FmPF FmOP%FRMPage: 5 50 FmSP%%PageProcessColors: Black%%PageCustomColors: %FRMEndPageSetupfalse FmCBFmE539 0 :Mf98 sf( )S542 0 :MFrMacBeginB0 FmPF FmOP42 49 M (        long grid_dims\(grid_rank\) ;)S42 63 M (        double grid_corner_lat\(grid_cells, grid_corners\) ;)S42 77 M (                grid_corner_lat:units = \"radians\" ;)S42 91 M (        double grid_corner_lon\(grid_cells, grid_corners\) ;)S42 105 M (                grid_corner_lon:units = \"radians\" ;)S42 119 M (        float thickness\(time, grid_cells\) ;)S42 133 M (                thickness:long_name = \"thickness of fliud layer\" ;)S42 147 M (                thickness:title = \"thickness of fliud layer\" ;)S42 161 M (                thickness:units = \"meters\" ;)S42 175 M (                thickness:positions = \"center\" ;)S42 189 M (                thickness:missing_value = 9.9999996e+35f ;)S42 203 M (        float height\(time, grid_cells\) ;)S42 217 M (                height:long_name = \"surface height of fliud layer\" ;)S42 231 M (                height:title = \"surface height of fliud layer\" ;)S42 245 M (                height:units = \"meters\" ;)S42 259 M (                height:positions = \"center\" ;)S42 273 M (                height:missing_value = 9.9999996e+35f ;)S42 287 M (        float relative\(time, grid_cells\) ;)S42 301 M (                relative:long_name = \"relative vorticity of fluid\" ;)S42 315 M (                relative:title = \"relative vorticity of fluid\" ;)S42 329 M (                relative:units = \"1/s\" ;)S42 343 M (                relative:positions = \"center\" ;)S42 357 M (                relative:missing_value = 9.9999996e+35f ;)S42 371 M (        float diver)S-0.217 N (gence\(time, grid_cells\) ;)S42 385 M (                diver)S-0.217 N (gence:long_name = \"diver)S-0.217 N (gence of fluid\" ;)S42 399 M (                diver)S-0.217 N (gence:title = \"diver)S-0.217 N (gence of fluid\" ;)S42 413 M (                diver)S-0.217 N (gence:units = \"1/s\" ;)S42 427 M (                diver)S-0.217 N (gence:positions = \"center\" ;)S42 441 M (                diver)S-0.217 N (gence:missing_value = 9.9999996e+35f ;)S42 455 M (        float absolute\(time, grid_cells\) ;)S42 469 M (                absolute:long_name = \"absolute vorticity of fliud layer\" ;)S42 483 M (                absolute:title = \"absolute vorticity of fliud layer\" ;)S42 497 M (                absolute:units = \"1/s\" ;)S42 511 M (                absolute:positions = \"center\" ;)S42 525 M (                absolute:missing_value = 9.9999996e+35f ;)S42 539 M (        float kinetic_ener)S-0.217 N (gy\(time, grid_cells\) ;)S42 553 M (                kinetic_ener)S-0.217 N (gy:long_name = \"kinetic ener)S-0.217 N (gy of fluid\" ;)S42 567 M (                kinetic_ener)S-0.217 N (gy:title = \"kinetic ener)S-0.217 N (gy of fluid\" ;)S42 581 M (                kinetic_ener)S-0.217 N (gy:units = \"1/s\" ;)S42 595 M (                kinetic_ener)S-0.217 N (gy:positions = \"center\" ;)S42 609 M (                kinetic_ener)S-0.217 N (gy:missing_value = 9.9999996e+35f ;)S42 623 M (        float tracer_1\(time, grid_cells\) ;)S42 637 M (                tracer_1:long_name = \"tracer field #1\" ;)S42 651 M (                tracer_1:title = \"tracer field #1\" ;)S42 665 M (                tracer_1:units = \"tracer per unit thickness\" ;)S42 679 M (                tracer_1:positions = \"center\" ;)SFmEendpshowpage%%PageTrailer%%Page: 6 6%%BeginPageSetup%RBIIncludePageSlotInvocationmTSsetuppmSVsetupinitializepage(; page: 6 of 6)setjob%%EndPageSetupgS 0 0 552 728 rC542 0 :MFrMacBegin0 FmPF FmOP%FRMPage: 6 60 FmSP%%PageProcessColors: Black%%PageCustomColors: %FRMEndPageSetupfalse FmCBFmE542 0 :Mf98 sf( )S545 0 :MFrMacBeginB0 FmPF FmOP42 49 M (                tracer_1:missing_value = 9.9999996e+35f ;)S42 63 M (        float tracer_2\(time, grid_cells\) ;)S42 77 M (                tracer_2:long_name = \"tracer field #2\" ;)S42 91 M (                tracer_2:title = \"tracer field #2\" ;)S42 105 M (                tracer_2:units = \"1/s\" ;)S42 119 M (                tracer_2:positions = \"center\" ;)S42 133 M (                tracer_2:missing_value = 9.9999996e+35f ;)S42 147 M (        float tracer_3\(time, grid_cells\) ;)S42 161 M (                tracer_3:long_name = \"tracer field #3\" ;)S42 175 M (                tracer_3:title = \"tracer field #3\" ;)S42 189 M (                tracer_3:units = \"tracer per unit thickness\" ;)S42 203 M (                tracer_3:positions = \"center\" ;)S42 217 M (                tracer_3:missing_value = 9.9999996e+35f ;)S42 231 M (        float tracer_4\(time, grid_cells\) ;)S42 245 M (                tracer_4:long_name = \"tracer field #4\" ;)S42 259 M (                tracer_4:title = \"tracer field #4\" ;)S42 273 M (                tracer_4:units = \"tracer per unit thickness\" ;)S42 287 M (                tracer_4:positions = \"center\" ;)S42 301 M (                tracer_4:missing_value = 9.9999996e+35f ;)S42 315 M (        float tracer_5\(time, grid_cells\) ;)S42 329 M (                tracer_5:long_name = \"tracer field #5\" ;)S42 343 M (                tracer_5:title = \"tracer field #5\" ;)S42 357 M (                tracer_5:units = \"tracer per unit thickness\" ;)S42 371 M (                tracer_5:positions = \"center\" ;)S42 385 M (                tracer_5:missing_value = 9.9999996e+35f ;)S42 399 M (        long interp_indx\(grid_size\) ;)S42 427 M (// global attributes:)S42 441 M (                :calendar = \"noleap\" ;)S42 455 M (                :institution = \"Colorado State University\" ;)S42 469 M (                :history = \"Created: 04/02/2004 at 14:03 -0700 GMT)S-0.217 N ( \" ;)S42 483 M (                :run = \"SWTC#5\" ;)S42 497 M (                :grid = \"geodesic\" ;)S42 511 M (                :version = \"0.6\" ;)S42 525 M (                :total_grid_size = 2562 ;)SFmEendpshowpage%%PageTrailer%%Trailerend%%EOF